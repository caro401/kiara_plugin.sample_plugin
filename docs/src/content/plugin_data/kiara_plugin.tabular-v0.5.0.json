{
  "type_name": "kiara_plugin.tabular",
  "documentation": {
    "description": "kiara data-types and modules for working with tables and databases.",
    "doc": "[![PyPI status](https://img.shields.io/pypi/status/kiara_plugin.tabular.svg)](https://pypi.python.org/pypi/kiara_plugin.tabular/)\n[![PyPI version](https://img.shields.io/pypi/v/kiara_plugin.tabular.svg)](https://pypi.python.org/pypi/kiara_plugin.tabular/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/kiara_plugin.tabular.svg)](https://pypi.python.org/pypi/kiara_plugin.tabular/)\n[![Build Status](https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2FDHARPA-Project%2Fkiara%2Fbadge%3Fref%3Ddevelop&style=flat)](https://actions-badge.atrox.dev/DHARPA-Project/kiara_plugin.tabular/goto?ref=develop)\n[![Coverage Status](https://coveralls.io/repos/github/DHARPA-Project/kiara_plugin.tabular/badge.svg?branch=develop)](https://coveralls.io/github/DHARPA-Project/kiara_plugin.tabular?branch=develop)\n[![Code style](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\n# [**kiara**](https://dharpa.org/kiara.documentation) plugin: (tabular)\n\nkiara data-types and modules for working with tables and databases.\n\n - Documentation: [https://DHARPA-Project.github.io/kiara_plugin.tabular](https://DHARPA-Project.github.io/kiara_plugin.tabular)\n - Code: [https://github.com/DHARPA-Project/kiara_plugin.tabular](https://github.com/DHARPA-Project/kiara_plugin.tabular)\n - `kiara`: [https://dharpa.org/kiara.documentation](https://dharpa.org/kiara.documentation)\n\n## Description\n\nTODO\n\n## Development\n\n### Requirements\n\n- Python (version >= 3.8)\n- pip, virtualenv\n- git\n- make (on Linux / Mac OS X -- optional)\n\n\n### Prepare development environment\n\nIf you only want to work on the modules, and not the core *Kiara* codebase, follow the instructions below. Otherwise, please\ncheck the notes on how to setup a *Kiara* development environment under (TODO).\n\n#### Linux & Mac OS X (using make)\n\nFor *NIX-like operating system, setting up a development environment is relatively easy:\n\n```console\ngit clone https://github.com/DHARPA-Project/kiara_plugin.tabular.git\ncd kiara_plugin.tabular\npython3 -m venv .venv\nsource .venv/bin/activate\nmake init\n```\n\n#### Windows (or manual pip install)\n\nIt's impossible to lay out all the ways Python can be installed on a machine, and virtual- (or conda-)envs can be created, so I'll assume you know how to do this.\nOne simple way is to install the [Anaconda (individual edition)](https://docs.anaconda.com/anaconda/install/index.html), then use the Anaconda navigator to create a new environment, install the 'git' package in it (if your system does not already have it), and use the 'Open Terminal' option of that environment to start up a terminal that has that virtual-/conda-environment activated.\n\nOnce that is done, `cd` into a directory where you want this project folder to live, and do:\n\n```console\n# make sure your virtual env is activated!!!\ngit clone https://github.com/DHARPA-Project/kiara_plugin.tabular.git\ncd kiara_plugin.tabular\npip install --extra-index-url https://pypi.fury.io/dharpa/ -U -e .[all_dev]\n```\n\n#### Try it out\n\nAfter this is done, you should be able to run the included example module via:\n\n```console\nkiara run tabular_example text_1=\"xxx\" text_2=\"yyy\"\n...\n...\n```\n\n### Re-activate the development environment\n\nThe 'prepare' step from above only has to be done once. After that, to re-enable your virtual environment,\nyou'll need to navigate to the directory again (wherever that is, in your case), and run the ``source`` command from before again:\n\n```console\ncd path/to/kiara_plugin.tabular\nsource .venv/bin/activate  # if it isn't activated already, for example by the Anaconda navigator\nkiara --help  # or whatever, point is, kiara should be available for you now,\n```\n\n### ``make`` targets (Linux & Mac OS X)\n\n- ``init``: init development project (install project & dev dependencies into virtualenv, as well as pre-commit git hook)\n- ``update-dependencies``: update development dependencies (mainly the core ``kiara`` package from git)\n- ``flake``: run *flake8* tests\n- ``mypy``: run mypy tests\n- ``test``: run unit tests\n- ``docs``: create static documentation pages (under ``build/site``)\n- ``serve-docs``: serve documentation pages (incl. auto-reload) for getting direct feedback when working on documentation\n- ``clean``: clean build directories\n\nFor details (and other, minor targets), check the ``Makefile``.\n\n\n### Running tests\n\n``` console\n> make test\n# or\n> make coverage\n```\n\n\n## Copyright & license\n\nThis project is MPL v2.0 licensed, for the license text please check the [LICENSE](/LICENSE) file in this repository."
  },
  "authors": {
    "authors": [
      {
        "name": "Markus Binsteiner",
        "email": "markus@frkl.io"
      }
    ]
  },
  "context": {
    "references": {
      "source_repo": {
        "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
        "desc": "The module package git repository."
      },
      "documentation": {
        "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
        "desc": "The url for the module package documentation."
      }
    },
    "tags": ["tabular"],
    "labels": {
      "package": "kiara_plugin.tabular"
    }
  },
  "version": "0.5.0",
  "data_types": {
    "group_title": null,
    "item_infos": {
      "array": {
        "type_name": "array",
        "documentation": {
          "description": "An array, in most cases used as a column within a table.",
          "doc": "Internally, this type uses the [KiaraArray][kiara_plugin.tabular.models.array.KiaraArray] wrapper class to manage array data. This wrapper class, in turn, uses an [Apache Arrow](https://arrow.apache.org) [Array](https://arrow.apache.org/docs/python/generated/pyarrow.Array.html#pyarrow.Array) to store the data in memory (and on disk)."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "ArrayType",
          "python_module_name": "kiara_plugin.tabular.data_types.array",
          "full_name": "kiara_plugin.tabular.data_types.array.ArrayType"
        },
        "value_cls": {
          "python_class_name": "KiaraArray",
          "python_module_name": "kiara_plugin.tabular.models.array",
          "full_name": "kiara_plugin.tabular.models.array.KiaraArray"
        },
        "data_type_config_cls": {
          "python_class_name": "DataTypeConfig",
          "python_module_name": "kiara.data_types",
          "full_name": "kiara.data_types.DataTypeConfig"
        },
        "lineage": ["array", "any"],
        "qualifier_profiles": {}
      },
      "database": {
        "type_name": "database",
        "documentation": {
          "description": "A database, containing one or several tables.",
          "doc": "This is backed by the [KiaraDatabase][kiara_plugin.tabular.models.db.KiaraDatabase] class to manage\nthe stored data."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "DatabaseType",
          "python_module_name": "kiara_plugin.tabular.data_types.db",
          "full_name": "kiara_plugin.tabular.data_types.db.DatabaseType"
        },
        "value_cls": {
          "python_class_name": "KiaraDatabase",
          "python_module_name": "kiara_plugin.tabular.models.db",
          "full_name": "kiara_plugin.tabular.models.db.KiaraDatabase"
        },
        "data_type_config_cls": {
          "python_class_name": "DataTypeConfig",
          "python_module_name": "kiara.data_types",
          "full_name": "kiara.data_types.DataTypeConfig"
        },
        "lineage": ["database", "any"],
        "qualifier_profiles": {}
      },
      "table": {
        "type_name": "table",
        "documentation": {
          "description": "Tabular data (table, spreadsheet, data_frame, what have you).",
          "doc": "The table data is organized in sets of columns (arrays of data of the same type), with each column having a string identifier.\n\n*kiara* uses an instance of the [`KiaraTable`][kiara_plugin.tabular.models.table.KiaraTable]\nclass to manage the table data, which let's developers access it in different formats ([Apache Arrow Table](https://arrow.apache.org/docs/python/generated/pyarrow.Table.html), [Pandas dataframe](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html), Python dict of lists, more to follow...).\n\nPlease consult the API doc of the `KiaraTable` class for more information about how to access and query the data:\n\n- [`KiaraTable` API doc](https://dharpa.org/kiara_plugin.tabular/latest/reference/kiara_plugin/tabular/models/__init__/#kiara_plugin.tabular.models.table.KiaraTable)\n\nInternally, the data is stored in [Apache Feather format](https://arrow.apache.org/docs/python/feather.html) -- both\nin memory and on disk when saved, which enables some advanced usage to preserve memory and compute overhead."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "TableType",
          "python_module_name": "kiara_plugin.tabular.data_types.table",
          "full_name": "kiara_plugin.tabular.data_types.table.TableType"
        },
        "value_cls": {
          "python_class_name": "KiaraTable",
          "python_module_name": "kiara_plugin.tabular.models.table",
          "full_name": "kiara_plugin.tabular.models.table.KiaraTable"
        },
        "data_type_config_cls": {
          "python_class_name": "DataTypeConfig",
          "python_module_name": "kiara.data_types",
          "full_name": "kiara.data_types.DataTypeConfig"
        },
        "lineage": ["table", "any"],
        "qualifier_profiles": {}
      },
      "tables": {
        "type_name": "tables",
        "documentation": {
          "description": "Multiple tabular data sets.",
          "doc": "The data is organized in sets of tables (which are sets of columns), each table having a string identifier.\n\nThis is similar to the 'database' data type, the main difference being that 'database' is backed by sqlite, whereas 'tables' is backed by Apache Feather/Arrow. There is no hard rule when it's better to use which, but in general, if you need to access the datasets on a row-basis, 'database' is the better fit, for more column-based analytical queries, 'tables' is better."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "TablesType",
          "python_module_name": "kiara_plugin.tabular.data_types.tables",
          "full_name": "kiara_plugin.tabular.data_types.tables.TablesType"
        },
        "value_cls": {
          "python_class_name": "KiaraTables",
          "python_module_name": "kiara_plugin.tabular.models.tables",
          "full_name": "kiara_plugin.tabular.models.tables.KiaraTables"
        },
        "data_type_config_cls": {
          "python_class_name": "DataTypeConfig",
          "python_module_name": "kiara.data_types",
          "full_name": "kiara.data_types.DataTypeConfig"
        },
        "lineage": ["tables", "any"],
        "qualifier_profiles": {}
      }
    },
    "type_name": "data_type"
  },
  "module_types": {
    "group_title": null,
    "item_infos": {
      "table.filters": {
        "type_name": "table.filters",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "TableFiltersModule",
          "python_module_name": "kiara_plugin.tabular.modules.table.filters",
          "full_name": "kiara_plugin.tabular.modules.table.filters.TableFiltersModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "FilterModuleConfig",
            "python_module_name": "kiara.modules.included_core_modules.filter",
            "full_name": "kiara.modules.included_core_modules.filter.FilterModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "filter_name": {
              "description": "The name of the filter.",
              "type": "string",
              "value_default": null,
              "required": true
            }
          }
        },
        "module_src": "class TableFiltersModule(FilterModule):\n\n    _module_type_name = \"table.filters\"\n\n    @classmethod\n    def retrieve_supported_type(cls) -> Union[Dict[str, Any], str]:\n\n        return \"table\"\n\n    def create_filter_inputs(self, filter_name: str) -> Union[None, ValueMapSchema]:\n\n        if filter_name in [\"select_columns\", \"drop_columns\"]:\n\n            return {\n                \"columns\": {\n                    \"type\": \"list\",\n                    \"doc\": \"The name of the columns to include.\",\n                    \"optional\": True,\n                },\n                \"ignore_invalid_column_names\": {\n                    \"type\": \"boolean\",\n                    \"doc\": \"Whether to ignore invalid column names.\",\n                    \"default\": True,\n                },\n            }\n        elif filter_name == \"select_rows\":\n            return {\n                \"match\": {\n                    \"type\": \"string\",\n                    \"doc\": \"The string token to match.\",\n                    \"optional\": True,\n                },\n                \"case_insensitive\": {\n                    \"type\": \"boolean\",\n                    \"doc\": \"Whether to ignore case.\",\n                    \"default\": True,\n                },\n            }\n\n        return None\n\n    def filter__select_columns(self, value: Value, filter_inputs: Mapping[str, Any]):\n\n        import pyarrow as pa\n\n        ignore_invalid = filter_inputs[\"ignore_invalid_column_names\"]\n        column_names = filter_inputs[\"columns\"]\n\n        if not column_names:\n            return value\n\n        table: KiaraTable = value.data\n        arrow_table = table.arrow_table\n        _column_names = []\n        _columns = []\n\n        for column_name in column_names:\n            if column_name not in arrow_table.column_names:\n                if ignore_invalid:\n                    continue\n                else:\n                    raise KiaraProcessingException(\n                        f\"Can't select column '{column_name}' from table: column name not available. Available columns: {', '.join(arrow_table.column_names)}.\"\n                    )\n\n            column = arrow_table.column(column_name)\n            _column_names.append(column_name)\n            _columns.append(column)\n\n        return pa.table(data=_columns, names=_column_names)\n\n    def filter__drop_columns(self, value: Value, filter_inputs: Mapping[str, Any]):\n\n        import pyarrow as pa\n\n        ignore_invalid = filter_inputs[\"ignore_invalid_column_names\"]\n        column_names_to_ignore = filter_inputs[\"columns\"]\n\n        if not column_names_to_ignore:\n            return value\n\n        table: KiaraTable = value.data\n        arrow_table = table.arrow_table\n\n        for column_name in column_names_to_ignore:\n            if column_name not in arrow_table.column_names:\n                if ignore_invalid:\n                    continue\n                else:\n                    raise KiaraProcessingException(\n                        f\"Can't select column '{column_name}' from table: column name not available. Available columns: {', '.join(arrow_table.column_names)}.\"\n                    )\n\n        _column_names = []\n        _columns = []\n        for column_name in arrow_table.column_names:\n\n            if column_name in column_names_to_ignore:\n                continue\n\n            column = arrow_table.column(column_name)\n            _column_names.append(column_name)\n            _columns.append(column)\n\n        return pa.table(data=_columns, names=_column_names)\n\n    def filter__select_rows(self, value: Value, filter_inputs: Mapping[str, Any]):\n\n        match = filter_inputs.get(\"match\", None)\n        if not match:\n            return value\n\n        case_insensitive = filter_inputs.get(\"case_insensitive\", True)\n\n        import duckdb\n\n        _table: KiaraTable = value.data\n        rel_from_arrow = duckdb.arrow(_table.arrow_table)\n\n        if case_insensitive:\n            # query_tokens = [f\"LOWER({c}) GLOB LOWER('{match}')\" for c in rel_from_arrow.columns]\n            query_tokens = [\n                f\"regexp_matches(LOWER({c}), LOWER('{match}'))\"\n                for c in rel_from_arrow.columns\n            ]\n        else:\n            query_tokens = [\n                f\"regexp_matches({c}, '{match}')\" for c in rel_from_arrow.columns\n            ]\n        query = \" OR \".join(query_tokens)\n\n        result = rel_from_arrow.filter(query)\n        return result.arrow()\n"
      },
      "render.database": {
        "type_name": "render.database",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "RenderDatabaseModule",
          "python_module_name": "kiara_plugin.tabular.modules.db",
          "full_name": "kiara_plugin.tabular.modules.db.RenderDatabaseModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "RenderValueModuleConfig",
            "python_module_name": "kiara.modules.included_core_modules.render_value",
            "full_name": "kiara.modules.included_core_modules.render_value.RenderValueModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "source_type": {
              "description": "The (kiara) data type to be rendered.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "target_type": {
              "description": "The (kiara) data type of210 the rendered result.",
              "type": "string",
              "value_default": null,
              "required": true
            }
          }
        },
        "module_src": "class RenderDatabaseModule(RenderDatabaseModuleBase):\n    _module_type_name = \"render.database\"\n\n    def render__database__as__string(\n        self, value: Value, render_config: Mapping[str, Any]\n    ):\n\n        input_number_of_rows = render_config.get(\"number_of_rows\", 20)\n        input_row_offset = render_config.get(\"row_offset\", 0)\n\n        table_name = render_config.get(\"table_name\", None)\n\n        wrap, data_related_scenes = self.preprocess_database(\n            value=value,\n            table_name=table_name,\n            input_number_of_rows=input_number_of_rows,\n            input_row_offset=input_row_offset,\n        )\n        pretty = wrap.as_string(max_row_height=1)\n\n        return RenderValueResult(\n            value_id=value.value_id,\n            rendered=pretty,\n            related_scenes=data_related_scenes,\n            render_config=render_config,\n            render_manifest=self.manifest.manifest_hash,\n        )\n\n    def render__database__as__terminal_renderable(\n        self, value: Value, render_config: Mapping[str, Any]\n    ):\n\n        input_number_of_rows = render_config.get(\"number_of_rows\", 20)\n        input_row_offset = render_config.get(\"row_offset\", 0)\n\n        table_name = render_config.get(\"table_name\", None)\n\n        wrap, data_related_scenes = self.preprocess_database(\n            value=value,\n            table_name=table_name,\n            input_number_of_rows=input_number_of_rows,\n            input_row_offset=input_row_offset,\n        )\n        pretty = wrap.as_terminal_renderable(max_row_height=1)\n\n        return RenderValueResult(\n            value_id=value.value_id,\n            render_config=render_config,\n            rendered=pretty,\n            related_scenes=data_related_scenes,\n            render_manifest=self.manifest.manifest_hash,\n        )\n"
      },
      "render.table": {
        "type_name": "render.table",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "RenderTableModule",
          "python_module_name": "kiara_plugin.tabular.modules.table",
          "full_name": "kiara_plugin.tabular.modules.table.RenderTableModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "RenderValueModuleConfig",
            "python_module_name": "kiara.modules.included_core_modules.render_value",
            "full_name": "kiara.modules.included_core_modules.render_value.RenderValueModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "source_type": {
              "description": "The (kiara) data type to be rendered.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "target_type": {
              "description": "The (kiara) data type of210 the rendered result.",
              "type": "string",
              "value_default": null,
              "required": true
            }
          }
        },
        "module_src": "class RenderTableModule(RenderTableModuleBase):\n    _module_type_name = \"render.table\"\n\n    def render__table__as__string(self, value: Value, render_config: Mapping[str, Any]):\n\n        input_number_of_rows = render_config.get(\"number_of_rows\", 20)\n        input_row_offset = render_config.get(\"row_offset\", 0)\n\n        wrap, data_related_scenes = self.preprocess_table(\n            value=value,\n            input_number_of_rows=input_number_of_rows,\n            input_row_offset=input_row_offset,\n        )\n        pretty = wrap.as_string(max_row_height=1)\n\n        return RenderValueResult(\n            value_id=value.value_id,\n            render_config=render_config,\n            render_manifest=self.manifest.manifest_hash,\n            rendered=pretty,\n            related_scenes=data_related_scenes,\n        )\n\n    def render__table__as__terminal_renderable(\n        self, value: Value, render_config: Mapping[str, Any]\n    ):\n\n        input_number_of_rows = render_config.get(\"number_of_rows\", 20)\n        input_row_offset = render_config.get(\"row_offset\", 0)\n\n        wrap, data_related_scenes = self.preprocess_table(\n            value=value,\n            input_number_of_rows=input_number_of_rows,\n            input_row_offset=input_row_offset,\n        )\n        pretty = wrap.as_terminal_renderable(max_row_height=1)\n\n        return RenderValueResult(\n            value_id=value.value_id,\n            render_config=render_config,\n            render_manifest=self.manifest.manifest_hash,\n            rendered=pretty,\n            related_scenes=data_related_scenes,\n        )\n"
      },
      "export.database": {
        "type_name": "export.database",
        "documentation": {
          "description": "Export database values.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "ExportNetworkDataModule",
          "python_module_name": "kiara_plugin.tabular.modules.db",
          "full_name": "kiara_plugin.tabular.modules.db.ExportNetworkDataModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "DataExportModuleConfig",
            "python_module_name": "kiara.modules.included_core_modules.export_as",
            "full_name": "kiara.modules.included_core_modules.export_as.DataExportModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "target_profile": {
              "description": "The name of the target profile. Used to distinguish different target formats for the same data type.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "source_type": {
              "description": "The type of the source data that is going to be exported.",
              "type": "string",
              "value_default": null,
              "required": true
            }
          }
        },
        "module_src": "class ExportNetworkDataModule(DataExportModule):\n    \"\"\"Export database values.\"\"\"\n\n    _module_type_name = \"export.database\"\n\n    def export__database__as__sqlite_db(\n        self, value: KiaraDatabase, base_path: str, name: str\n    ):\n        \"\"\"Export network data as a sqlite database file.\"\"\"\n\n        target_path = os.path.abspath(os.path.join(base_path, f\"{name}.sqlite\"))\n        shutil.copy2(value.db_file_path, target_path)\n\n        return {\"files\": target_path}\n\n    def export__database__as__sql_dump(\n        self, value: KiaraDatabase, base_path: str, name: str\n    ):\n        \"\"\"Export network data as a sql dump file.\"\"\"\n\n        import sqlite_utils\n\n        db = sqlite_utils.Database(value.db_file_path)\n        target_path = Path(os.path.join(base_path, f\"{name}.sql\"))\n        with target_path.open(\"wt\") as f:\n            for line in db.conn.iterdump():\n                f.write(line + \"\\n\")\n\n        return {\"files\": target_path.as_posix()}\n\n    def export__database__as__csv_files(\n        self, value: KiaraDatabase, base_path: str, name: str\n    ):\n        \"\"\"Export network data as 2 csv files (one for edges, one for nodes.\"\"\"\n\n        import sqlite3\n\n        files = []\n\n        for table_name in value.table_names:\n            target_path = os.path.join(base_path, f\"{name}__{table_name}.csv\")\n            os.makedirs(os.path.dirname(target_path), exist_ok=True)\n\n            # copied from: https://stackoverflow.com/questions/2952366/dump-csv-from-sqlalchemy\n            con = sqlite3.connect(value.db_file_path)\n            outfile = open(target_path, \"wt\")\n            outcsv = csv.writer(outfile)\n\n            cursor = con.execute(f\"select * from {table_name}\")\n            # dump column titles (optional)\n            outcsv.writerow(x[0] for x in cursor.description)\n            # dump rows\n            outcsv.writerows(cursor.fetchall())\n\n            outfile.close()\n            files.append(target_path)\n\n        return {\"files\": files}\n"
      },
      "export.table": {
        "type_name": "export.table",
        "documentation": {
          "description": "Export table data items.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "ExportTableModule",
          "python_module_name": "kiara_plugin.tabular.modules.table",
          "full_name": "kiara_plugin.tabular.modules.table.ExportTableModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "DataExportModuleConfig",
            "python_module_name": "kiara.modules.included_core_modules.export_as",
            "full_name": "kiara.modules.included_core_modules.export_as.DataExportModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "target_profile": {
              "description": "The name of the target profile. Used to distinguish different target formats for the same data type.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "source_type": {
              "description": "The type of the source data that is going to be exported.",
              "type": "string",
              "value_default": null,
              "required": true
            }
          }
        },
        "module_src": "class ExportTableModule(DataExportModule):\n    \"\"\"Export table data items.\"\"\"\n\n    _module_type_name = \"export.table\"\n\n    def export__table__as__csv_file(self, value: KiaraTable, base_path: str, name: str):\n        \"\"\"Export a table as csv file.\"\"\"\n\n        from pyarrow import csv\n\n        target_path = os.path.join(base_path, f\"{name}.csv\")\n        csv.write_csv(value.arrow_table, target_path)\n\n        return {\"files\": target_path}\n\n    # def export__table__as__sqlite_db(\n    #     self, value: KiaraTable, base_path: str, name: str\n    # ):\n    #\n    #     target_path = os.path.abspath(os.path.join(base_path, f\"{name}.sqlite\"))\n    #\n    #     raise NotImplementedError()\n    #     # shutil.copy2(value.db_file_path, target_path)\n    #\n    #     return {\"files\": target_path}\n"
      },
      "export.tables": {
        "type_name": "export.tables",
        "documentation": {
          "description": "Export network data items.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "ExportNetworkDataModule",
          "python_module_name": "kiara_plugin.tabular.modules.tables",
          "full_name": "kiara_plugin.tabular.modules.tables.ExportNetworkDataModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "DataExportModuleConfig",
            "python_module_name": "kiara.modules.included_core_modules.export_as",
            "full_name": "kiara.modules.included_core_modules.export_as.DataExportModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "target_profile": {
              "description": "The name of the target profile. Used to distinguish different target formats for the same data type.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "source_type": {
              "description": "The type of the source data that is going to be exported.",
              "type": "string",
              "value_default": null,
              "required": true
            }
          }
        },
        "module_src": "class ExportNetworkDataModule(DataExportModule):\n    \"\"\"Export network data items.\"\"\"\n\n    _module_type_name = \"export.tables\"\n\n    # def export__network_data__as__graphml_file(\n    #     self, value: NetworkData, base_path: str, name: str\n    # ):\n    #     \"\"\"Export network data as graphml file.\"\"\"\n    #\n    #     import networkx as nx\n    #\n    #     target_path = os.path.join(base_path, f\"{name}.graphml\")\n    #\n    #     # TODO: can't just assume digraph\n    #     graph: nx.Graph = value.as_networkx_graph(nx.DiGraph)\n    #     nx.write_graphml(graph, target_path)\n    #\n    #     return {\"files\": target_path}\n    #\n    def export__tables__as__sqlite_db(\n        self, value: KiaraTables, base_path: str, name: str\n    ):\n        \"\"\"Export network data as a sqlite database file.\"\"\"\n\n        from kiara_plugin.tabular.utils.tables import create_database_from_tables\n\n        db = create_database_from_tables(tables=value)\n\n        target_path = os.path.abspath(os.path.join(base_path, f\"{name}.sqlite\"))\n        shutil.move(db.db_file_path, target_path)\n\n        return {\"files\": target_path}\n\n    def export__tables__as__sql_dump(\n        self, value: KiaraTables, base_path: str, name: str\n    ):\n        \"\"\"Export network data as a sql dump file.\"\"\"\n\n        import sqlite_utils\n\n        from kiara_plugin.tabular.utils.tables import create_database_from_tables\n\n        kiara_db = create_database_from_tables(tables=value)\n\n        db = sqlite_utils.Database(kiara_db.db_file_path)\n        target_path = Path(os.path.join(base_path, f\"{name}.sql\"))\n        with target_path.open(\"wt\") as f:\n            for line in db.conn.iterdump():\n                f.write(line + \"\\n\")\n\n        return {\"files\": target_path.as_posix()}\n\n    def export__tables__as__csv_files(\n        self, value: KiaraTables, base_path: str, name: str\n    ):\n        \"\"\"Export network data as 2 csv files (one for edges, one for nodes.\"\"\"\n\n        from pyarrow import csv\n\n        files = []\n\n        for table_name in value.table_names:\n            target_path = os.path.join(base_path, f\"{name}__{table_name}.csv\")\n            os.makedirs(os.path.dirname(target_path), exist_ok=True)\n\n            table = value.get_table(table_name)\n\n            csv.write_csv(table.arrow_table, target_path)\n            files.append(target_path)\n\n        return {\"files\": files}\n"
      },
      "load.array": {
        "type_name": "load.array",
        "documentation": {
          "description": "Deserialize array data.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "DeserializeArrayModule",
          "python_module_name": "kiara_plugin.tabular.modules.array",
          "full_name": "kiara_plugin.tabular.modules.array.DeserializeArrayModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "SerializeConfig",
            "python_module_name": "kiara.modules.included_core_modules.serialization",
            "full_name": "kiara.modules.included_core_modules.serialization.SerializeConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "value_type": {
              "description": "The value type of the actual (unserialized) value.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "target_profile": {
              "description": "The profile name of the de-serialization result data.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "serialization_profile": {
              "description": "The name of the serialization profile used to serialize the source value.",
              "type": "string",
              "value_default": null,
              "required": true
            }
          }
        },
        "module_src": "class DeserializeArrayModule(DeserializeValueModule):\n    \"\"\"Deserialize array data.\"\"\"\n\n    _module_type_name = \"load.array\"\n\n    @classmethod\n    def retrieve_supported_target_profiles(cls) -> Mapping[str, Type]:\n        return {\"python_object\": KiaraArray}\n\n    @classmethod\n    def retrieve_serialized_value_type(cls) -> str:\n        return \"array\"\n\n    @classmethod\n    def retrieve_supported_serialization_profile(cls) -> str:\n        return \"feather\"\n\n    def to__python_object(self, data: SerializedData, **config: Any):\n\n        assert \"array.arrow\" in data.get_keys() and len(list(data.get_keys())) == 1\n\n        chunks = data.get_serialized_data(\"array.arrow\")\n\n        # TODO: support multiple chunks\n        assert chunks.get_number_of_chunks() == 1\n        files = list(chunks.get_chunks(as_files=True, symlink_ok=True))\n        assert len(files) == 1\n\n        array_file = files[0]\n\n        array = KiaraArray(data_path=array_file)\n        return array\n"
      },
      "load.database": {
        "type_name": "load.database",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "LoadDatabaseFromDiskModule",
          "python_module_name": "kiara_plugin.tabular.modules.db",
          "full_name": "kiara_plugin.tabular.modules.db.LoadDatabaseFromDiskModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "SerializeConfig",
            "python_module_name": "kiara.modules.included_core_modules.serialization",
            "full_name": "kiara.modules.included_core_modules.serialization.SerializeConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "value_type": {
              "description": "The value type of the actual (unserialized) value.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "target_profile": {
              "description": "The profile name of the de-serialization result data.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "serialization_profile": {
              "description": "The name of the serialization profile used to serialize the source value.",
              "type": "string",
              "value_default": null,
              "required": true
            }
          }
        },
        "module_src": "class LoadDatabaseFromDiskModule(DeserializeValueModule):\n\n    _module_type_name = \"load.database\"\n\n    @classmethod\n    def retrieve_supported_target_profiles(cls) -> Mapping[str, Type]:\n        return {\"python_object\": KiaraDatabase}\n\n    @classmethod\n    def retrieve_serialized_value_type(cls) -> str:\n        return \"database\"\n\n    @classmethod\n    def retrieve_supported_serialization_profile(cls) -> str:\n        return \"copy\"\n\n    def to__python_object(self, data: SerializedData, **config: Any):\n\n        assert \"db.sqlite\" in data.get_keys() and len(list(data.get_keys())) == 1\n\n        chunks = data.get_serialized_data(\"db.sqlite\")\n\n        # TODO: support multiple chunks\n        assert chunks.get_number_of_chunks() == 1\n        files = list(chunks.get_chunks(as_files=True, symlink_ok=True))\n        assert len(files) == 1\n\n        db_file = files[0]\n\n        db = KiaraDatabase(db_file_path=db_file)\n        return db\n"
      },
      "load.table": {
        "type_name": "load.table",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "DeserializeTableModule",
          "python_module_name": "kiara_plugin.tabular.modules.table",
          "full_name": "kiara_plugin.tabular.modules.table.DeserializeTableModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "SerializeConfig",
            "python_module_name": "kiara.modules.included_core_modules.serialization",
            "full_name": "kiara.modules.included_core_modules.serialization.SerializeConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "value_type": {
              "description": "The value type of the actual (unserialized) value.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "target_profile": {
              "description": "The profile name of the de-serialization result data.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "serialization_profile": {
              "description": "The name of the serialization profile used to serialize the source value.",
              "type": "string",
              "value_default": null,
              "required": true
            }
          }
        },
        "module_src": "class DeserializeTableModule(DeserializeValueModule):\n\n    _module_type_name = \"load.table\"\n\n    @classmethod\n    def retrieve_supported_target_profiles(cls) -> Mapping[str, Type]:\n        return {\"python_object\": KiaraTable}\n\n    @classmethod\n    def retrieve_serialized_value_type(cls) -> str:\n        return \"table\"\n\n    @classmethod\n    def retrieve_supported_serialization_profile(cls) -> str:\n        return \"feather\"\n\n    def to__python_object(self, data: SerializedData, **config: Any):\n\n        import pyarrow as pa\n\n        columns = {}\n\n        table_schema_chunks = data.get_serialized_data(TABLE_SCHEMA_CHUNKS_NAME)\n        chunks_generator = table_schema_chunks.get_chunks(as_files=False)\n        schema_chunk = next(chunks_generator)  # type: ignore\n        schema = pa.ipc.read_schema(pa.py_buffer(schema_chunk))\n\n        for column_name in data.get_keys():\n\n            if column_name == TABLE_SCHEMA_CHUNKS_NAME:\n                continue\n\n            chunks = data.get_serialized_data(column_name)\n\n            # TODO: support multiple chunks\n            assert chunks.get_number_of_chunks() == 1\n            files = list(chunks.get_chunks(as_files=True, symlink_ok=True))\n            assert len(files) == 1\n\n            file = files[0]\n            with pa.memory_map(file, \"r\") as column_chunk:\n                loaded_arrays: pa.Table = pa.ipc.open_file(column_chunk).read_all()\n                column = loaded_arrays.column(column_name)\n                if column_name == EMPTY_COLUMN_NAME_MARKER:\n                    columns[\"\"] = column\n                else:\n                    columns[column_name] = column\n\n        arrow_table = pa.table(columns, schema=schema)\n\n        table = KiaraTable.create_table(arrow_table)\n        return table\n"
      },
      "load.tables": {
        "type_name": "load.tables",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "DeserializeTableModule",
          "python_module_name": "kiara_plugin.tabular.modules.tables",
          "full_name": "kiara_plugin.tabular.modules.tables.DeserializeTableModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "SerializeConfig",
            "python_module_name": "kiara.modules.included_core_modules.serialization",
            "full_name": "kiara.modules.included_core_modules.serialization.SerializeConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "value_type": {
              "description": "The value type of the actual (unserialized) value.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "target_profile": {
              "description": "The profile name of the de-serialization result data.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "serialization_profile": {
              "description": "The name of the serialization profile used to serialize the source value.",
              "type": "string",
              "value_default": null,
              "required": true
            }
          }
        },
        "module_src": "class DeserializeTableModule(DeserializeValueModule):\n\n    _module_type_name = \"load.tables\"\n\n    @classmethod\n    def retrieve_supported_target_profiles(cls) -> Mapping[str, Type]:\n        return {\"python_object\": KiaraTables}\n\n    @classmethod\n    def retrieve_serialized_value_type(cls) -> str:\n        return \"tables\"\n\n    @classmethod\n    def retrieve_supported_serialization_profile(cls) -> str:\n        return \"feather\"\n\n    def to__python_object(self, data: SerializedData, **config: Any):\n\n        import pyarrow as pa\n\n        tables: Dict[str, Any] = {}\n\n        for column_id in data.get_keys():\n\n            if TABLE_COLUMN_SPLIT_MARKER not in column_id:\n                raise KiaraException(\n                    f\"Invalid serialized 'tables' data, key must contain '{TABLE_COLUMN_SPLIT_MARKER}': {column_id}\"\n                )\n            table_id, column_name = column_id.split(\n                TABLE_COLUMN_SPLIT_MARKER, maxsplit=1\n            )\n\n            chunks = data.get_serialized_data(column_id)\n\n            # TODO: support multiple chunks\n            assert chunks.get_number_of_chunks() == 1\n            files = list(chunks.get_chunks(as_files=True, symlink_ok=True))\n            assert len(files) == 1\n\n            file = files[0]\n            with pa.memory_map(file, \"r\") as column_chunk:\n                loaded_arrays: pa.Table = pa.ipc.open_file(column_chunk).read_all()\n                column = loaded_arrays.column(column_name)\n                tables.setdefault(table_id, {})[column_name] = column\n\n        table = KiaraTables.create_tables(tables)\n        return table\n"
      },
      "parse.date_array": {
        "type_name": "parse.date_array",
        "documentation": {
          "description": "Create an array of date objects from an array of strings.",
          "doc": "This module is very simplistic at the moment, more functionality and options will be added in the future.\n\nAt its core, this module uses the standard parser from the\n[dateutil](https://github.com/dateutil/dateutil) package to parse strings into dates. As this parser can't handle\n complex strings, the input strings can be pre-processed in the following ways:\n\n- 'cut' non-relevant parts of the string (using 'min_index' & 'max_index' input/config options)\n- remove matching tokens from the string, and replace them with a single whitespace (using the 'remove_tokens' option)\n\nBy default, if an input string can't be parsed this module will raise an exception. This can be prevented by\nsetting this modules 'force_non_null' config option or input to 'False', in which case un-parsable strings\nwill appear as 'NULL' value in the resulting array."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "ExtractDateModule",
          "python_module_name": "kiara_plugin.tabular.modules.array",
          "full_name": "kiara_plugin.tabular.modules.array.ExtractDateModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "ExtractDateConfig",
            "python_module_name": "kiara_plugin.tabular.modules.array",
            "full_name": "kiara_plugin.tabular.modules.array.ExtractDateConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "add_inputs": {
              "description": "If set to 'True', parse options will be available as inputs.",
              "type": "boolean",
              "value_default": true,
              "required": false
            },
            "input_fields": {
              "description": "If not empty, only add the fields specified in here to the module inputs schema.",
              "type": "array",
              "value_default": null,
              "required": false
            },
            "force_non_null": {
              "description": "If set to 'True', raise an error if any of the strings in the array can't be parsed.",
              "type": "boolean",
              "value_default": true,
              "required": false
            },
            "min_index": {
              "description": "The minimum index from where to start parsing the string(s).",
              "type": "anyOf: [{'type': 'integer'}, {'type': 'null'}]",
              "value_default": null,
              "required": false
            },
            "max_index": {
              "description": "The maximum index until whic to parse the string(s).",
              "type": "anyOf: [{'type': 'integer'}, {'type': 'null'}]",
              "value_default": null,
              "required": false
            },
            "remove_tokens": {
              "description": "A list of tokens/characters to replace with a single white-space before parsing the input.",
              "type": "array",
              "value_default": null,
              "required": false
            }
          }
        },
        "module_src": "class ExtractDateModule(AutoInputsKiaraModule):\n    \"\"\"Create an array of date objects from an array of strings.\n\n    This module is very simplistic at the moment, more functionality and options will be added in the future.\n\n    At its core, this module uses the standard parser from the\n    [dateutil](https://github.com/dateutil/dateutil) package to parse strings into dates. As this parser can't handle\n     complex strings, the input strings can be pre-processed in the following ways:\n\n    - 'cut' non-relevant parts of the string (using 'min_index' & 'max_index' input/config options)\n    - remove matching tokens from the string, and replace them with a single whitespace (using the 'remove_tokens' option)\n\n    By default, if an input string can't be parsed this module will raise an exception. This can be prevented by\n    setting this modules 'force_non_null' config option or input to 'False', in which case un-parsable strings\n    will appear as 'NULL' value in the resulting array.\n    \"\"\"\n\n    _module_type_name = \"parse.date_array\"\n    _config_cls = ExtractDateConfig\n\n    def create_inputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        inputs = {\"array\": {\"type\": \"array\", \"doc\": \"The input array.\"}}\n        return inputs\n\n    def create_outputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        return {\n            \"date_array\": {\n                \"type\": \"array\",\n                \"doc\": \"The resulting array with items of a date data type.\",\n            }\n        }\n\n    def process(self, inputs: ValueMap, outputs: ValueMap, job_log: JobLog):\n\n        import polars as pl\n        import pyarrow as pa\n        from dateutil import parser\n\n        force_non_null: bool = self.get_data_for_field(\n            field_name=\"force_non_null\", inputs=inputs\n        )\n        min_pos: Union[None, int] = self.get_data_for_field(\n            field_name=\"min_index\", inputs=inputs\n        )\n        if min_pos is None:\n            min_pos = 0\n        max_pos: Union[None, int] = self.get_data_for_field(\n            field_name=\"max_index\", inputs=inputs\n        )\n        remove_tokens: Iterable[str] = self.get_data_for_field(\n            field_name=\"remove_tokens\", inputs=inputs\n        )\n\n        def parse_date(_text: str):\n\n            text = _text\n            if min_pos:\n                try:\n                    text = text[min_pos:]  # type: ignore\n                except Exception:\n                    return None\n            if max_pos:\n                try:\n                    text = text[0 : max_pos - min_pos]  # type: ignore\n                except Exception:\n                    pass\n\n            if remove_tokens:\n                for t in remove_tokens:\n                    text = text.replace(t, \" \")\n\n            try:\n                d_obj = parser.parse(text, fuzzy=True)\n            except Exception as e:\n                if force_non_null:\n                    raise KiaraProcessingException(e)\n                return None\n\n            if d_obj is None:\n                if force_non_null:\n                    raise KiaraProcessingException(\n                        f\"Can't parse date from string: {text}\"\n                    )\n                return None\n\n            return d_obj\n\n        value = inputs.get_value_obj(\"array\")\n        array: KiaraArray = value.data\n\n        series = pl.Series(name=\"tokens\", values=array.arrow_array)\n        job_log.add_log(f\"start parsing date for {len(array)} items\")\n        result = series.apply(parse_date)\n        job_log.add_log(f\"finished parsing date for {len(array)} items\")\n        result_array = result.to_arrow()\n\n        # TODO: remove this cast once the array data type can handle non-chunked arrays\n        chunked = pa.chunked_array(result_array)\n        outputs.set_values(date_array=chunked)\n"
      },
      "create.database": {
        "type_name": "create.database",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "CreateDatabaseModule",
          "python_module_name": "kiara_plugin.tabular.modules.db",
          "full_name": "kiara_plugin.tabular.modules.db.CreateDatabaseModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "CreateDatabaseModuleConfig",
            "python_module_name": "kiara_plugin.tabular.modules.db",
            "full_name": "kiara_plugin.tabular.modules.db.CreateDatabaseModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "source_type": {
              "description": "The value type of the source value.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "target_type": {
              "description": "The value type of the target.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "ignore_errors": {
              "description": "Whether to ignore convert errors and omit the failed items.",
              "type": "boolean",
              "value_default": false,
              "required": false
            },
            "merge_into_single_table": {
              "description": "Whether to merge all csv files into a single table.",
              "type": "boolean",
              "value_default": false,
              "required": false
            },
            "include_source_metadata": {
              "description": "Whether to include a table with metadata about the source files.",
              "type": "anyOf: [{'type': 'boolean'}, {'type': 'null'}]",
              "value_default": null,
              "required": false
            },
            "include_source_file_content": {
              "description": "When including source metadata, whether to also include the original raw (string) content.",
              "type": "boolean",
              "value_default": false,
              "required": false
            }
          }
        },
        "module_src": "class CreateDatabaseModule(CreateFromModule):\n\n    _module_type_name = \"create.database\"\n    _config_cls = CreateDatabaseModuleConfig\n\n    def create__database__from__file(\n        self, source_value: Value, optional: ValueMap\n    ) -> Any:\n        \"\"\"Create a database from a file.\n\n        Currently, only csv files are supported.\n        \"\"\"\n        import csv as py_csv\n\n        temp_f = tempfile.mkdtemp()\n        db_path = os.path.join(temp_f, \"db.sqlite\")\n\n        def cleanup():\n            shutil.rmtree(db_path, ignore_errors=True)\n\n        atexit.register(cleanup)\n\n        file_item: KiaraFile = source_value.data\n        if not file_item.file_name.endswith(\".csv\"):\n            raise KiaraProcessingException(\n                \"Only csv files are supported (at the moment).\"\n            )\n\n        table_name = file_item.file_name_without_extension\n\n        table_name = table_name.replace(\"-\", \"_\")\n        table_name = table_name.replace(\".\", \"_\")\n\n        has_header = optional.get_value_data(\"first_row_is_header\")\n        if has_header is None:\n            try:\n                has_header = True\n                with open(source_value.data.path, \"rt\") as csvfile:\n                    sniffer = py_csv.Sniffer()\n                    has_header = sniffer.has_header(csvfile.read(2048))\n                    csvfile.seek(0)\n            except Exception as e:\n                # TODO: add this to the procss log\n                log_message(\n                    \"csv_sniffer.error\",\n                    file=source_value.data.path,\n                    error=str(e),\n                    details=\"assuming csv file has header\",\n                )\n\n        try:\n            create_sqlite_table_from_tabular_file(\n                target_db_file=db_path,\n                file_item=file_item,\n                table_name=table_name,\n                no_headers=not has_header,\n            )\n        except Exception as e:\n            if self.get_config_value(\"ignore_errors\") is True or True:\n                log_message(\"ignore.import_file\", file=file_item.path, reason=str(e))\n            else:\n                raise KiaraProcessingException(e)\n\n        include_raw_content_in_file_info: bool = self.get_config_value(\n            \"include_source_metadata\"\n        )\n        if include_raw_content_in_file_info:\n            db = KiaraDatabase(db_file_path=db_path)\n            db.create_if_not_exists()\n            include_content: bool = self.get_config_value(\"include_source_file_content\")\n            db._unlock_db()\n            included_files = {file_item.file_name: file_item}\n            file_bundle = KiaraFileBundle.create_from_file_models(\n                files=included_files, bundle_name=file_item.file_name\n            )\n            insert_db_table_from_file_bundle(\n                database=db,\n                file_bundle=file_bundle,\n                table_name=\"source_files_metadata\",\n                include_content=include_content,\n            )\n            db._lock_db()\n\n        return db_path\n\n    def create__database__from__file_bundle(\n        self, source_value: Value, job_log: JobLog\n    ) -> Any:\n        \"\"\"Create a database from a file_bundle value.\n\n        Currently, only csv files are supported, files in the source file_bundle that have different extensions will be ignored.\n\n        Unless 'merge_into_single_table' is set to 'True' in the module configuration, each csv file will create one table\n        in the resulting database. If this option is set, only a single table with all the values of all\n        csv files will be created. For this to work, all csv files should follow the same schema.\n\n        \"\"\"\n\n        merge_into_single_table = self.get_config_value(\"merge_into_single_table\")\n        if merge_into_single_table:\n            raise NotImplementedError(\"Not supported (yet).\")\n\n        include_raw_content_in_file_info: Union[bool, None] = self.get_config_value(\n            \"include_source_metadata\"\n        )\n\n        temp_f = tempfile.mkdtemp()\n        db_path = os.path.join(temp_f, \"db.sqlite\")\n\n        def cleanup():\n            shutil.rmtree(db_path, ignore_errors=True)\n\n        atexit.register(cleanup)\n\n        db = KiaraDatabase(db_file_path=db_path)\n        db.create_if_not_exists()\n\n        # TODO: check whether/how to add indexes\n\n        bundle: KiaraFileBundle = source_value.data\n\n        table_names: List[str] = []\n        included_files: Dict[str, bool] = {}\n        errors: Dict[str, Union[None, str]] = {}\n        for rel_path in sorted(bundle.included_files.keys()):\n\n            if not rel_path.endswith(\".csv\"):\n                job_log.add_log(\n                    f\"Ignoring file (not csv): {rel_path}\", log_level=logging.INFO\n                )\n                included_files[rel_path] = False\n                errors[rel_path] = \"Not a csv file.\"\n                continue\n\n            file_item = bundle.included_files[rel_path]\n            table_name = find_free_id(\n                stem=file_item.file_name_without_extension, current_ids=table_names\n            )\n            try:\n                table_names.append(table_name)\n                create_sqlite_table_from_tabular_file(\n                    target_db_file=db_path, file_item=file_item, table_name=table_name\n                )\n                included_files[rel_path] = True\n            except Exception as e:\n                included_files[rel_path] = False\n                errors[rel_path] = KiaraException.get_root_details(e)\n\n                if self.get_config_value(\"ignore_errors\") is True or True:\n                    log_message(\"ignore.import_file\", file=rel_path, reason=str(e))\n                    continue\n\n                raise KiaraProcessingException(e)\n\n        if include_raw_content_in_file_info in [None, True]:\n            include_content: bool = self.get_config_value(\"include_source_file_content\")\n            db._unlock_db()\n\n            insert_db_table_from_file_bundle(\n                database=db,\n                file_bundle=source_value.data,\n                table_name=\"source_files_metadata\",\n                include_content=include_content,\n                included_files=included_files,\n                errors=errors,\n            )\n            db._lock_db()\n\n        return db_path\n\n    def create_optional_inputs(\n        self, source_type: str, target_type\n    ) -> Union[Mapping[str, Mapping[str, Any]], None]:\n\n        inputs = {}\n        if source_type == \"file\":\n            inputs[\"first_row_is_header\"] = {\n                \"type\": \"boolean\",\n                \"optional\": True,\n                \"doc\": \"Whether the first row of the file is a header row. If not provided, kiara will try to auto-determine.\",\n            }\n\n        if target_type == \"database\" and source_type == \"table\":\n\n            inputs[\"table_name\"] = {\n                \"type\": \"string\",\n                \"doc\": \"The name of the table in the new database.\",\n                \"default\": \"imported_table\",\n            }\n\n        return inputs\n\n    def create__database__from__tables(\n        self, source_value: Value, optional: ValueMap\n    ) -> Any:\n        \"\"\"Create a database value from a list of tables.\"\"\"\n\n        from kiara_plugin.tabular.utils.tables import create_database_from_tables\n\n        tables: KiaraTables = source_value.data\n        db = create_database_from_tables(tables=tables)\n\n        return db\n\n    def create__database__from__table(\n        self, source_value: Value, optional: ValueMap\n    ) -> Any:\n        \"\"\"Create a database value from a table.\"\"\"\n\n        table_name = optional.get_value_data(\"table_name\")\n        if not table_name:\n            table_name = DEFAULT_TABLE_NAME\n\n        table: KiaraTable = source_value.data\n        arrow_table = table.arrow_table\n\n        column_map = None\n        index_columns = None\n\n        sqlite_schema = create_sqlite_schema_data_from_arrow_table(\n            table=arrow_table, index_columns=index_columns, column_map=column_map\n        )\n\n        db = KiaraDatabase.create_in_temp_dir()\n        db._unlock_db()\n        engine = db.get_sqlalchemy_engine()\n\n        _table = sqlite_schema.create_table(table_name=table_name, engine=engine)\n\n        with engine.connect() as conn:\n\n            for batch in arrow_table.to_batches(\n                max_chunksize=DEFAULT_TABULAR_DATA_CHUNK_SIZE\n            ):\n                conn.execute(insert(_table), batch.to_pylist())\n                conn.commit()\n\n        db._lock_db()\n        return db\n"
      },
      "create.table": {
        "type_name": "create.table",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "CreateTableModule",
          "python_module_name": "kiara_plugin.tabular.modules.table",
          "full_name": "kiara_plugin.tabular.modules.table.CreateTableModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "CreateTableModuleConfig",
            "python_module_name": "kiara_plugin.tabular.modules.table",
            "full_name": "kiara_plugin.tabular.modules.table.CreateTableModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "source_type": {
              "description": "The value type of the source value.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "target_type": {
              "description": "The value type of the target.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "ignore_errors": {
              "description": "Whether to ignore convert errors and omit the failed items.",
              "type": "boolean",
              "value_default": false,
              "required": false
            }
          }
        },
        "module_src": "class CreateTableModule(CreateFromModule):\n\n    _module_type_name = \"create.table\"\n    _config_cls = CreateTableModuleConfig\n\n    def create_optional_inputs(\n        self, source_type: str, target_type\n    ) -> Union[Mapping[str, Mapping[str, Any]], None]:\n\n        if source_type == \"file\":\n            return {\n                \"first_row_is_header\": {\n                    \"type\": \"boolean\",\n                    \"optional\": True,\n                    \"doc\": \"Whether the first row of a (csv) file is a header row. If not provided, kiara will try to auto-determine. Ignored if not a csv file.\",\n                }\n            }\n\n        return None\n\n    def create__table__from__file(self, source_value: Value, optional: ValueMap) -> Any:\n        \"\"\"Create a table from a file, trying to auto-determine the format of said file.\n\n        Currently supported input file types:\n\n        - csv\n        - parquet\n        \"\"\"\n\n        input_file: KiaraFile = source_value.data\n\n        if input_file.file_name.endswith(\".csv\"):\n            return self.import_csv_file(source_value, optional)\n        elif input_file.file_name.endswith(\".parquet\"):\n            return self.import_parquet_file(source_value, optional)\n\n    def import_parquet_file(\n        self, source_value: Value, optional: ValueMap\n    ) -> KiaraTable:\n        \"\"\"Create a table from a parquet file value.\"\"\"\n\n        import pyarrow.parquet as pq\n\n        # TODO: use memory mapping to optimize memory usage?\n\n        input_file: KiaraFile = source_value.data\n        imported_data = None\n        errors = []\n\n        try:\n            imported_data = pq.read_table(input_file.path)\n        except Exception as e:\n            errors.append(e)\n\n        if imported_data is None:\n            raise KiaraProcessingException(\n                f\"Failed to import parquet file '{input_file.path}'.\"\n            )\n\n        return KiaraTable.create_table(imported_data)\n\n    def import_csv_file(self, source_value: Value, optional: ValueMap) -> KiaraTable:\n        \"\"\"Create a table from a csv file value.\"\"\"\n        import csv as py_csv\n\n        from pyarrow import csv\n\n        input_file: KiaraFile = source_value.data\n        imported_data = None\n        errors = []\n\n        has_header = optional.get_value_data(\"first_row_is_header\")\n        if has_header is None:\n            try:\n                has_header = True\n                with open(input_file.path, \"rt\") as csvfile:\n                    sniffer = py_csv.Sniffer()\n                    has_header = sniffer.has_header(csvfile.read(2048))\n                    csvfile.seek(0)\n            except Exception as e:\n                # TODO: add this to the procss log\n                log_message(\n                    \"csv_sniffer.error\",\n                    file=input_file.path,\n                    error=str(e),\n                    details=\"assuming csv file has header\",\n                )\n\n        try:\n            if has_header:\n                imported_data = csv.read_csv(input_file.path)\n            else:\n                read_options = csv.ReadOptions(autogenerate_column_names=True)\n                imported_data = csv.read_csv(input_file.path, read_options=read_options)\n        except Exception as e:\n            errors.append(e)\n\n        if imported_data is None:\n            raise KiaraProcessingException(\n                f\"Failed to import csv file '{input_file.path}'.\"\n            )\n\n        # import pandas as pd\n        # df = pd.read_csv(input_file.path)\n        # imported_data = pa.Table.from_pandas(df)\n\n        return KiaraTable.create_table(imported_data)\n\n    # def create__table__from__csv_file(self, source_value: Value) -> Any:\n    #     \"\"\"Create a table from a csv_file value.\"\"\"\n    #\n    #     from pyarrow import csv\n    #\n    #     input_file: FileModel = source_value.data\n    #     imported_data = csv.read_csv(input_file.path)\n    #\n    #     # import pandas as pd\n    #     # df = pd.read_csv(input_file.path)\n    #     # imported_data = pa.Table.from_pandas(df)\n    #\n    #     return KiaraTable.create_table(imported_data)\n\n    def create__table__from__file_bundle(self, source_value: Value) -> Any:\n        \"\"\"Create a table value from a text file_bundle.\n\n        The resulting table will have (at a minimum) the following columns:\n        - id: an auto-assigned index\n        - rel_path: the relative path of the file (from the provided base path)\n        - content: the text file content\n        \"\"\"\n\n        import pyarrow as pa\n\n        bundle: KiaraFileBundle = source_value.data\n\n        columns = FILE_BUNDLE_IMPORT_AVAILABLE_COLUMNS\n\n        ignore_errors = self.get_config_value(\"ignore_errors\")\n        file_dict = bundle.read_text_file_contents(ignore_errors=ignore_errors)\n\n        # TODO: use chunks to save on memory\n        tabular: Dict[str, List[Any]] = {}\n        for column in columns:\n            for index, rel_path in enumerate(sorted(file_dict.keys())):\n\n                if column == \"content\":\n                    _value: Any = file_dict[rel_path]\n                elif column == \"id\":\n                    _value = index\n                elif column == \"rel_path\":\n                    _value = rel_path\n                else:\n                    file_model = bundle.included_files[rel_path]\n                    _value = getattr(file_model, column)\n\n                tabular.setdefault(column, []).append(_value)\n\n        table = pa.Table.from_pydict(tabular)\n        return KiaraTable.create_table(table)\n"
      },
      "create.tables": {
        "type_name": "create.tables",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "CreateTablesModule",
          "python_module_name": "kiara_plugin.tabular.modules.tables",
          "full_name": "kiara_plugin.tabular.modules.tables.CreateTablesModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "CreateTablesModuleConfig",
            "python_module_name": "kiara_plugin.tabular.modules.tables",
            "full_name": "kiara_plugin.tabular.modules.tables.CreateTablesModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "source_type": {
              "description": "The value type of the source value.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "target_type": {
              "description": "The value type of the target.",
              "type": "string",
              "value_default": null,
              "required": true
            },
            "ignore_errors": {
              "description": "Whether to ignore convert errors and omit the failed items.",
              "type": "boolean",
              "value_default": false,
              "required": false
            },
            "include_source_metadata": {
              "description": "Whether to include a table with metadata about the source files.",
              "type": "anyOf: [{'type': 'boolean'}, {'type': 'null'}]",
              "value_default": null,
              "required": false
            },
            "include_source_file_content": {
              "description": "When including source metadata, whether to also include the original raw (string) content.",
              "type": "boolean",
              "value_default": false,
              "required": false
            }
          }
        },
        "module_src": "class CreateTablesModule(CreateFromModule):\n\n    _module_type_name = \"create.tables\"\n    _config_cls = CreateTablesModuleConfig\n\n    def create__tables__from__file_bundle(\n        self, source_value: Value, job_log: JobLog\n    ) -> Any:\n        \"\"\"Create a database from a file_bundle value.\n\n        Currently, only csv files are supported, files in the source file_bundle that have different extensions will be ignored.\n\n        Unless 'merge_into_single_table' is set to 'True' in the module configuration, each csv file will create one table\n        in the resulting database. If this option is set, only a single table with all the values of all\n        csv files will be created. For this to work, all csv files should follow the same schema.\n\n        \"\"\"\n\n        from pyarrow import csv as pa_csv\n\n        include_raw_content_in_file_info: Union[bool, None] = self.get_config_value(\n            \"include_source_metadata\"\n        )\n\n        tables = {}\n\n        bundle: KiaraFileBundle = source_value.data\n\n        table_names: List[str] = []\n        included_files: Dict[str, bool] = {}\n        errors: Dict[str, Union[None, str]] = {}\n        for rel_path in sorted(bundle.included_files.keys()):\n\n            if not rel_path.endswith(\".csv\"):\n                job_log.add_log(\n                    f\"Ignoring file (not csv): {rel_path}\", log_level=logging.INFO\n                )\n                included_files[rel_path] = False\n                errors[rel_path] = \"Not a csv file.\"\n                continue\n\n            file_item = bundle.included_files[rel_path]\n            table_name = find_free_id(\n                stem=file_item.file_name_without_extension, current_ids=table_names\n            )\n            try:\n                table_names.append(table_name)\n                table = pa_csv.read_csv(file_item.path)\n                tables[table_name] = table\n                included_files[rel_path] = True\n            except Exception as e:\n                included_files[rel_path] = False\n                errors[rel_path] = KiaraException.get_root_details(e)\n\n                if self.get_config_value(\"ignore_errors\") is True or True:\n                    log_message(\"ignore.import_file\", file=rel_path, reason=str(e))\n                    continue\n\n                raise KiaraProcessingException(e)\n\n        if include_raw_content_in_file_info in [None, True]:\n            include_content: bool = self.get_config_value(\"include_source_file_content\")\n\n            if \"file_items\" in tables:\n                raise KiaraProcessingException(\n                    \"Can't create table: 'file_items' columns already exists.\"\n                )\n\n            table = create_table_from_file_bundle(\n                file_bundle=source_value.data,\n                include_content=include_content,\n                included_files=included_files,\n                errors=errors,\n            )\n            tables[\"file_items\"] = table\n\n        return tables\n"
      },
      "query.database": {
        "type_name": "query.database",
        "documentation": {
          "description": "Execute a sql query against a (sqlite) database.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "QueryDatabaseModule",
          "python_module_name": "kiara_plugin.tabular.modules.db",
          "full_name": "kiara_plugin.tabular.modules.db.QueryDatabaseModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "QueryDatabaseConfig",
            "python_module_name": "kiara_plugin.tabular.modules.db",
            "full_name": "kiara_plugin.tabular.modules.db.QueryDatabaseConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "query": {
              "description": "The query.",
              "type": "anyOf: [{'type': 'string'}, {'type': 'null'}]",
              "value_default": null,
              "required": false
            }
          }
        },
        "module_src": "class QueryDatabaseModule(KiaraModule):\n    \"\"\"Execute a sql query against a (sqlite) database.\"\"\"\n\n    _config_cls = QueryDatabaseConfig\n    _module_type_name = \"query.database\"\n\n    def create_inputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        result: Dict[str, Dict[str, Any]] = {\n            \"database\": {\"type\": \"database\", \"doc\": \"The database to query.\"}\n        }\n\n        if not self.get_config_value(\"query\"):\n            result[\"query\"] = {\"type\": \"string\", \"doc\": \"The query to execute.\"}\n\n        return result\n\n    def create_outputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        return {\"query_result\": {\"type\": \"table\", \"doc\": \"The query result.\"}}\n\n    def process(self, inputs: ValueMap, outputs: ValueMap):\n\n        import pyarrow as pa\n\n        database: KiaraDatabase = inputs.get_value_data(\"database\")\n        query = self.get_config_value(\"query\")\n        if query is None:\n            query = inputs.get_value_data(\"query\")\n\n        # TODO: make this memory efficent\n\n        result_columns: Dict[str, List[Any]] = {}\n        with database.get_sqlalchemy_engine().connect() as con:\n            result = con.execute(text(query))\n            for r in result:\n                for k, v in dict(r).items():\n                    result_columns.setdefault(k, []).append(v)\n\n        table = pa.Table.from_pydict(result_columns)\n        outputs.set_value(\"query_result\", table)\n"
      },
      "table.pick.column": {
        "type_name": "table.pick.column",
        "documentation": {
          "description": "Pick one column from a table, returning an array.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "PickColumnModule",
          "python_module_name": "kiara_plugin.tabular.modules.table",
          "full_name": "kiara_plugin.tabular.modules.table.PickColumnModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "PickColumnModuleConfig",
            "python_module_name": "kiara_plugin.tabular.modules.table",
            "full_name": "kiara_plugin.tabular.modules.table.PickColumnModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "column_name": {
              "description": "A hardcoded column name to cut.",
              "type": "anyOf: [{'type': 'string'}, {'type': 'null'}]",
              "value_default": null,
              "required": false
            }
          }
        },
        "module_src": "class PickColumnModule(KiaraModule):\n    \"\"\"Pick one column from a table, returning an array.\"\"\"\n\n    _module_type_name = \"table.pick.column\"\n    _config_cls = PickColumnModuleConfig\n\n    def create_inputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        inputs: Dict[str, Any] = {\"table\": {\"type\": \"table\", \"doc\": \"A table.\"}}\n        column_name = self.get_config_value(\"column_name\")\n        if not column_name:\n            inputs[\"column_name\"] = {\n                \"type\": \"string\",\n                \"doc\": \"The name of the column to extract.\",\n            }\n\n        return inputs\n\n    def create_outputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        outputs: Mapping[str, Any] = {\"array\": {\"type\": \"array\", \"doc\": \"The column.\"}}\n        return outputs\n\n    def process(self, inputs: ValueMap, outputs: ValueMap) -> None:\n\n        import pyarrow as pa\n\n        column_name: Union[str, None] = self.get_config_value(\"column_name\")\n        if not column_name:\n            column_name = inputs.get_value_data(\"column_name\")\n\n        if not column_name:\n            raise KiaraProcessingException(\n                \"Could not cut column from table: column_name not provided or empty string.\"\n            )\n\n        table_value: Value = inputs.get_value_obj(\"table\")\n        table_metadata: KiaraTableMetadata = table_value.get_property_data(\n            \"metadata.table\"\n        )\n        available = table_metadata.table.column_names\n\n        if column_name not in available:\n            raise KiaraProcessingException(\n                f\"Invalid column name '{column_name}'. Available column names: {', '.join(available)}\"\n            )\n\n        table: pa.Table = table_value.data.arrow_table\n        column = table.column(column_name)\n\n        outputs.set_value(\"array\", column)\n"
      },
      "table.merge": {
        "type_name": "table.merge",
        "documentation": {
          "description": "Create a table from other tables and/or arrays.",
          "doc": "This module needs configuration to be set (for now). It's currently not possible to merge an arbitrary\nnumber of tables/arrays, all tables to be merged must be specified in the module configuration.\n\nColumn names of the resulting table can be controlled by the 'column_map' configuration, which takes the\ndesired column name as key, and a field-name in the following format as value:\n- '[inputs_schema key]' for inputs of type 'array'\n- '[inputs_schema_key].orig_column_name' for inputs of type 'table'"
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "MergeTableModule",
          "python_module_name": "kiara_plugin.tabular.modules.table",
          "full_name": "kiara_plugin.tabular.modules.table.MergeTableModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "MergeTableConfig",
            "python_module_name": "kiara_plugin.tabular.modules.table",
            "full_name": "kiara_plugin.tabular.modules.table.MergeTableConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "inputs_schema": {
              "description": "A dict describing the inputs for this merge process.",
              "type": "object",
              "value_default": null,
              "required": true
            },
            "column_map": {
              "description": "A map describing",
              "type": "object",
              "value_default": null,
              "required": false
            }
          }
        },
        "module_src": "class MergeTableModule(KiaraModule):\n    \"\"\"Create a table from other tables and/or arrays.\n\n    This module needs configuration to be set (for now). It's currently not possible to merge an arbitrary\n    number of tables/arrays, all tables to be merged must be specified in the module configuration.\n\n    Column names of the resulting table can be controlled by the 'column_map' configuration, which takes the\n    desired column name as key, and a field-name in the following format as value:\n    - '[inputs_schema key]' for inputs of type 'array'\n    - '[inputs_schema_key].orig_column_name' for inputs of type 'table'\n    \"\"\"\n\n    _module_type_name = \"table.merge\"\n    _config_cls = MergeTableConfig\n\n    def create_inputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        input_schema_models = self.get_config_value(\"inputs_schema\")\n\n        input_schema_dict = {}\n        for k, v in input_schema_models.items():\n            input_schema_dict[k] = v.model_dump()\n\n        return input_schema_dict\n\n    def create_outputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        outputs = {\n            \"table\": {\n                \"type\": \"table\",\n                \"doc\": \"The merged table, including all source tables and columns.\",\n            }\n        }\n        return outputs\n\n    def process(self, inputs: ValueMap, outputs: ValueMap, job_log: JobLog) -> None:\n\n        import pyarrow as pa\n\n        inputs_schema: Dict[str, Any] = self.get_config_value(\"inputs_schema\")\n        column_map: Dict[str, str] = self.get_config_value(\"column_map\")\n\n        sources = {}\n        for field_name in inputs_schema.keys():\n            sources[field_name] = inputs.get_value_data(field_name)\n\n        len_dict = {}\n        arrays = {}\n\n        column_map_final = dict(column_map)\n\n        for source_key, table_or_array in sources.items():\n\n            if isinstance(table_or_array, KiaraTable):\n                rows = table_or_array.num_rows\n                for name in table_or_array.column_names:\n                    array_name = f\"{source_key}.{name}\"\n                    if column_map and array_name not in column_map.values():\n                        job_log.add_log(\n                            f\"Ignoring column '{name}' of input table '{source_key}': not listed in column_map.\"\n                        )\n                        continue\n\n                    column = table_or_array.arrow_table.column(name)\n                    arrays[array_name] = column\n                    if not column_map:\n                        if name in column_map_final:\n                            raise Exception(\n                                f\"Can't merge table, duplicate column name: {name}.\"\n                            )\n                        column_map_final[name] = array_name\n\n            elif isinstance(table_or_array, KiaraArray):\n\n                if column_map and source_key not in column_map.values():\n                    job_log.add_log(\n                        f\"Ignoring array '{source_key}': not listed in column_map.\"\n                    )\n                    continue\n\n                rows = len(table_or_array)\n                arrays[source_key] = table_or_array.arrow_array\n\n                if not column_map:\n                    if source_key in column_map_final.keys():\n                        raise Exception(\n                            f\"Can't merge table, duplicate column name: {source_key}.\"\n                        )\n                    column_map_final[source_key] = source_key\n\n            else:\n                raise KiaraProcessingException(\n                    f\"Can't merge table: invalid type '{type(table_or_array)}' for source '{source_key}'.\"\n                )\n\n            len_dict[source_key] = rows\n\n        all_rows = None\n        for source_key, rows in len_dict.items():\n            if all_rows is None:\n                all_rows = rows\n            elif all_rows != rows:\n                all_rows = None\n                break\n\n        if all_rows is None:\n            len_str = \"\"\n            for name, rows in len_dict.items():\n                len_str = f\" {name} ({rows})\"\n\n            raise KiaraProcessingException(\n                f\"Can't merge table, sources have different lengths: {len_str}\"\n            )\n\n        column_names = []\n        columns = []\n        for column_name, ref in column_map_final.items():\n            column_names.append(column_name)\n            column = arrays[ref]\n            columns.append(column)\n\n        table = pa.Table.from_arrays(arrays=columns, names=column_names)\n\n        outputs.set_value(\"table\", table)\n"
      },
      "query.table": {
        "type_name": "query.table",
        "documentation": {
          "description": "Execute a sql query against an (Arrow) table.",
          "doc": "The default relation name for the sql query is 'data', but can be modified by the 'relation_name' config option/input.\n\nIf the 'query' module config option is not set, users can provide their own query, otherwise the pre-set\none will be used."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "QueryTableSQL",
          "python_module_name": "kiara_plugin.tabular.modules.table",
          "full_name": "kiara_plugin.tabular.modules.table.QueryTableSQL"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "QueryTableSQLModuleConfig",
            "python_module_name": "kiara_plugin.tabular.modules.table",
            "full_name": "kiara_plugin.tabular.modules.table.QueryTableSQLModuleConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "query": {
              "description": "The query to execute. If not specified, the user will be able to provide their own.",
              "type": "anyOf: [{'type': 'string'}, {'type': 'null'}]",
              "value_default": null,
              "required": false
            },
            "relation_name": {
              "description": "The name the table is referred to in the sql query. If not specified, the user will be able to provide their own.",
              "type": "anyOf: [{'type': 'string'}, {'type': 'null'}]",
              "value_default": "data",
              "required": false
            }
          }
        },
        "module_src": "class QueryTableSQL(KiaraModule):\n    \"\"\"Execute a sql query against an (Arrow) table.\n\n    The default relation name for the sql query is 'data', but can be modified by the 'relation_name' config option/input.\n\n    If the 'query' module config option is not set, users can provide their own query, otherwise the pre-set\n    one will be used.\n    \"\"\"\n\n    _module_type_name = \"query.table\"\n    _config_cls = QueryTableSQLModuleConfig\n\n    def create_inputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        inputs = {\n            \"table\": {\n                \"type\": \"table\",\n                \"doc\": \"The table to query\",\n            }\n        }\n\n        if self.get_config_value(\"query\") is None:\n            inputs[\"query\"] = {\n                \"type\": \"string\",\n                \"doc\": \"The query, use the value of the 'relation_name' input as table, e.g. 'select * from data'.\",\n            }\n            inputs[\"relation_name\"] = {\n                \"type\": \"string\",\n                \"doc\": \"The name the table is referred to in the sql query.\",\n                \"default\": \"data\",\n            }\n\n        return inputs\n\n    def create_outputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        return {\"query_result\": {\"type\": \"table\", \"doc\": \"The query result.\"}}\n\n    def process(self, inputs: ValueMap, outputs: ValueMap) -> None:\n\n        import duckdb\n\n        if self.get_config_value(\"query\") is None:\n            _query: str = inputs.get_value_data(\"query\")\n            _relation_name: str = inputs.get_value_data(\"relation_name\")\n        else:\n            _query = self.get_config_value(\"query\")\n            _relation_name = self.get_config_value(\"relation_name\")\n\n        if _relation_name.upper() in RESERVED_SQL_KEYWORDS:\n            raise KiaraProcessingException(\n                f\"Invalid relation name '{_relation_name}': this is a reserved sql keyword, please select a different name.\"\n            )\n\n        _table: KiaraTable = inputs.get_value_data(\"table\")\n        rel_from_arrow = duckdb.arrow(_table.arrow_table)\n        result: duckdb.DuckDBPyRelation = rel_from_arrow.query(_relation_name, _query)\n\n        outputs.set_value(\"query_result\", result.arrow())\n"
      },
      "assemble.tables": {
        "type_name": "assemble.tables",
        "documentation": {
          "description": "Assemble a 'tables' value from multiple tables.",
          "doc": "Depending on the module configuration, 2 or more tables can be merged into a single 'tables' value."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "AssembleTablesModule",
          "python_module_name": "kiara_plugin.tabular.modules.tables",
          "full_name": "kiara_plugin.tabular.modules.tables.AssembleTablesModule"
        },
        "module_config": {
          "python_class": {
            "python_class_name": "AssembleTablesConfig",
            "python_module_name": "kiara_plugin.tabular.modules.tables",
            "full_name": "kiara_plugin.tabular.modules.tables.AssembleTablesConfig"
          },
          "config_values": {
            "constants": {
              "description": "Value constants for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "defaults": {
              "description": "Value defaults for this module.",
              "type": "object",
              "value_default": null,
              "required": false
            },
            "number_of_tables": {
              "description": "How many tables should be merged. If 'table_names' is empty, this defaults to '2', otherwise the length of the 'table_names' input.",
              "type": "anyOf: [{'type': 'integer'}, {'type': 'null'}]",
              "value_default": null,
              "required": false
            },
            "table_names": {
              "description": "A pre-defined list of table names. If not defined, users will be asked for the table name(s).",
              "type": "anyOf: [{'items': {'type': 'string'}, 'type': 'array'}, {'type': 'null'}]",
              "value_default": null,
              "required": false
            }
          }
        },
        "module_src": "class AssembleTablesModule(KiaraModule):\n    \"\"\"Assemble a 'tables' value from multiple tables.\n\n    Depending on the module configuration, 2 or more tables can be merged into a single 'tables' value.\n\n    \"\"\"\n\n    _module_type_name = \"assemble.tables\"\n    _config_cls = AssembleTablesConfig\n\n    @functools.cached_property\n    def _table_details(self) -> Tuple[int, Union[List[str], None]]:\n\n        number_tables: Union[int, None] = self.get_config_value(\"number_of_tables\")\n        table_names: Union[None, List[str]] = self.get_config_value(\"table_names\")\n\n        if not table_names:\n            if not number_tables:\n                number_tables = 2\n        elif not number_tables:\n            number_tables = len(table_names)\n        elif not number_tables == len(table_names):\n            raise KiaraException(\n                \"The 'number_of_tables' and length of 'table_names' config option must match.\"\n            )\n\n        if number_tables < 2:\n            raise KiaraException(\"The 'number_of_tables' must be at least 2.\")\n\n        return number_tables, table_names\n\n    @property\n    def number_of_tables(self) -> int:\n        number_tables, _ = self._table_details\n        return number_tables\n\n    @property\n    def table_names(self) -> Union[List[str], None]:\n        _, table_names = self._table_details\n        return table_names\n\n    def create_inputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        number_tables = self.number_of_tables\n        table_names = self.table_names\n\n        if not table_names:\n            if not number_tables:\n                number_tables = 2\n        elif not number_tables:\n            number_tables = len(table_names)\n        elif not number_tables == len(table_names):\n            raise KiaraException(\n                \"The 'number_of_tables' and length of 'table_names' config option must match.\"\n            )\n\n        if number_tables < 2:\n            raise KiaraException(\"The 'number_of_tables' must be at least 2.\")\n\n        inputs_schema = {}\n        if not table_names:\n            for i in range(1, number_tables + 1):\n                inputs_schema[f\"table_name_{i}\"] = {\n                    \"type\": \"string\",\n                    \"doc\": f\"The alias for table #{i}.\",\n                }\n                inputs_schema[f\"table_{i}\"] = {\n                    \"type\": \"table\",\n                    \"doc\": f\"The table to merge (#{i}).\",\n                }\n        else:\n            for table_name in table_names:\n                inputs_schema[f\"table_{table_name}\"] = {\n                    \"type\": \"table\",\n                    \"doc\": f\"The table to merge for alias '{table_name}'.\",\n                }\n\n        return inputs_schema\n\n    def create_outputs_schema(\n        self,\n    ) -> ValueMapSchema:\n\n        outputs = {\n            \"tables\": {\n                \"type\": \"tables\",\n                \"doc\": \"The assembled tables instance.\",\n            }\n        }\n        return outputs\n\n    def process(self, inputs: ValueMap, outputs: ValueMap, job_log: JobLog) -> None:\n\n        number_tables = self.number_of_tables\n        table_names = self.table_names\n\n        tables: Dict[str, Any] = {}\n        if not table_names:\n            for i in range(1, number_tables + 1):\n                table_name = inputs.get_value_data(f\"table_name_{i}\")\n                table = inputs.get_value_obj(f\"table_{i}\")\n                if table_name in tables.keys():\n                    raise KiaraException(f\"Duplicate table name: '{table_name}'\")\n                tables[table_name] = table\n        else:\n            for table_name in table_names:\n                table = inputs.get_value_obj(f\"table_{table_name}\")\n                tables[table_name] = table\n\n        outputs.set_value(\"tables\", tables)\n"
      }
    },
    "type_name": "module_type"
  },
  "kiara_model_types": {
    "group_title": "kiara_models.kiara_plugin.tabular",
    "item_infos": {
      "database_metadata": {
        "type_name": "database_metadata",
        "documentation": {
          "description": "Database and table properties.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "DatabaseMetadata",
          "python_module_name": "kiara_plugin.tabular.models.db",
          "full_name": "kiara_plugin.tabular.models.db.DatabaseMetadata"
        },
        "metadata_schema": {
          "$defs": {
            "ColumnSchema": {
              "description": "Describes properties of a single column of the 'table' data type.",
              "properties": {
                "type_name": {
                  "description": "The type name of the column (backend-specific).",
                  "title": "Type Name",
                  "type": "string"
                },
                "metadata": {
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Other metadata for the column.",
                  "title": "Metadata",
                  "type": "object"
                }
              },
              "required": ["type_name"],
              "title": "ColumnSchema",
              "type": "object"
            },
            "StorageBackend": {
              "description": "Describes the storage backend type that is used, and (optionally) some backend-specific properties.",
              "properties": {
                "name": {
                  "description": "The name of the storage backend.",
                  "title": "Name",
                  "type": "string"
                },
                "properties": {
                  "type": "object",
                  "description": "Backend-specific properties.",
                  "title": "Properties"
                }
              },
              "required": ["name"],
              "title": "StorageBackend",
              "type": "object"
            },
            "TableMetadata": {
              "additionalProperties": false,
              "description": "Describes properties for the 'table' data type.",
              "properties": {
                "column_names": {
                  "description": "The name of the columns of the table.",
                  "items": {
                    "type": "string"
                  },
                  "title": "Column Names",
                  "type": "array"
                },
                "column_schema": {
                  "additionalProperties": {
                    "$ref": "#/$defs/ColumnSchema"
                  },
                  "description": "The schema description of the table.",
                  "title": "Column Schema",
                  "type": "object"
                },
                "backend": {
                  "allOf": [
                    {
                      "$ref": "#/$defs/StorageBackend"
                    }
                  ],
                  "description": "The storage backend that is used."
                },
                "rows": {
                  "description": "The number of rows the table contains.",
                  "title": "Rows",
                  "type": "integer"
                },
                "size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "The tables size in bytes.",
                  "title": "Size"
                }
              },
              "required": ["column_names", "column_schema", "backend", "rows"],
              "title": "TableMetadata",
              "type": "object"
            }
          },
          "additionalProperties": false,
          "description": "Database and table properties.",
          "properties": {
            "tables": {
              "additionalProperties": {
                "$ref": "#/$defs/TableMetadata"
              },
              "description": "The table schema.",
              "title": "Tables",
              "type": "object"
            }
          },
          "required": ["tables"],
          "title": "DatabaseMetadata",
          "type": "object"
        }
      },
      "kiara_table_metadata": {
        "type_name": "kiara_table_metadata",
        "documentation": {
          "description": "File stats.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "KiaraTableMetadata",
          "python_module_name": "kiara_plugin.tabular.models.table",
          "full_name": "kiara_plugin.tabular.models.table.KiaraTableMetadata"
        },
        "metadata_schema": {
          "$defs": {
            "ColumnSchema": {
              "description": "Describes properties of a single column of the 'table' data type.",
              "properties": {
                "type_name": {
                  "description": "The type name of the column (backend-specific).",
                  "title": "Type Name",
                  "type": "string"
                },
                "metadata": {
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Other metadata for the column.",
                  "title": "Metadata",
                  "type": "object"
                }
              },
              "required": ["type_name"],
              "title": "ColumnSchema",
              "type": "object"
            },
            "StorageBackend": {
              "description": "Describes the storage backend type that is used, and (optionally) some backend-specific properties.",
              "properties": {
                "name": {
                  "description": "The name of the storage backend.",
                  "title": "Name",
                  "type": "string"
                },
                "properties": {
                  "type": "object",
                  "description": "Backend-specific properties.",
                  "title": "Properties"
                }
              },
              "required": ["name"],
              "title": "StorageBackend",
              "type": "object"
            },
            "TableMetadata": {
              "additionalProperties": false,
              "description": "Describes properties for the 'table' data type.",
              "properties": {
                "column_names": {
                  "description": "The name of the columns of the table.",
                  "items": {
                    "type": "string"
                  },
                  "title": "Column Names",
                  "type": "array"
                },
                "column_schema": {
                  "additionalProperties": {
                    "$ref": "#/$defs/ColumnSchema"
                  },
                  "description": "The schema description of the table.",
                  "title": "Column Schema",
                  "type": "object"
                },
                "backend": {
                  "allOf": [
                    {
                      "$ref": "#/$defs/StorageBackend"
                    }
                  ],
                  "description": "The storage backend that is used."
                },
                "rows": {
                  "description": "The number of rows the table contains.",
                  "title": "Rows",
                  "type": "integer"
                },
                "size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "The tables size in bytes.",
                  "title": "Size"
                }
              },
              "required": ["column_names", "column_schema", "backend", "rows"],
              "title": "TableMetadata",
              "type": "object"
            }
          },
          "additionalProperties": false,
          "description": "File stats.",
          "properties": {
            "table": {
              "allOf": [
                {
                  "$ref": "#/$defs/TableMetadata"
                }
              ],
              "description": "The table schema."
            }
          },
          "required": ["table"],
          "title": "KiaraTableMetadata",
          "type": "object"
        }
      },
      "kiara_tables_metadata": {
        "type_name": "kiara_tables_metadata",
        "documentation": {
          "description": "File stats.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "KiaraTablesMetadata",
          "python_module_name": "kiara_plugin.tabular.models.tables",
          "full_name": "kiara_plugin.tabular.models.tables.KiaraTablesMetadata"
        },
        "metadata_schema": {
          "$defs": {
            "ColumnSchema": {
              "description": "Describes properties of a single column of the 'table' data type.",
              "properties": {
                "type_name": {
                  "description": "The type name of the column (backend-specific).",
                  "title": "Type Name",
                  "type": "string"
                },
                "metadata": {
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Other metadata for the column.",
                  "title": "Metadata",
                  "type": "object"
                }
              },
              "required": ["type_name"],
              "title": "ColumnSchema",
              "type": "object"
            },
            "StorageBackend": {
              "description": "Describes the storage backend type that is used, and (optionally) some backend-specific properties.",
              "properties": {
                "name": {
                  "description": "The name of the storage backend.",
                  "title": "Name",
                  "type": "string"
                },
                "properties": {
                  "type": "object",
                  "description": "Backend-specific properties.",
                  "title": "Properties"
                }
              },
              "required": ["name"],
              "title": "StorageBackend",
              "type": "object"
            },
            "TableMetadata": {
              "additionalProperties": false,
              "description": "Describes properties for the 'table' data type.",
              "properties": {
                "column_names": {
                  "description": "The name of the columns of the table.",
                  "items": {
                    "type": "string"
                  },
                  "title": "Column Names",
                  "type": "array"
                },
                "column_schema": {
                  "additionalProperties": {
                    "$ref": "#/$defs/ColumnSchema"
                  },
                  "description": "The schema description of the table.",
                  "title": "Column Schema",
                  "type": "object"
                },
                "backend": {
                  "allOf": [
                    {
                      "$ref": "#/$defs/StorageBackend"
                    }
                  ],
                  "description": "The storage backend that is used."
                },
                "rows": {
                  "description": "The number of rows the table contains.",
                  "title": "Rows",
                  "type": "integer"
                },
                "size": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "The tables size in bytes.",
                  "title": "Size"
                }
              },
              "required": ["column_names", "column_schema", "backend", "rows"],
              "title": "TableMetadata",
              "type": "object"
            }
          },
          "additionalProperties": false,
          "description": "File stats.",
          "properties": {
            "tables": {
              "additionalProperties": {
                "$ref": "#/$defs/TableMetadata"
              },
              "description": "The table schema.",
              "title": "Tables",
              "type": "object"
            }
          },
          "required": ["tables"],
          "title": "KiaraTablesMetadata",
          "type": "object"
        }
      },
      "table_metadata": {
        "type_name": "table_metadata",
        "documentation": {
          "description": "Describes properties for the 'table' data type.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "TableMetadata",
          "python_module_name": "kiara_plugin.tabular.models",
          "full_name": "kiara_plugin.tabular.models.TableMetadata"
        },
        "metadata_schema": {
          "$defs": {
            "ColumnSchema": {
              "description": "Describes properties of a single column of the 'table' data type.",
              "properties": {
                "type_name": {
                  "description": "The type name of the column (backend-specific).",
                  "title": "Type Name",
                  "type": "string"
                },
                "metadata": {
                  "additionalProperties": {
                    "type": "object"
                  },
                  "description": "Other metadata for the column.",
                  "title": "Metadata",
                  "type": "object"
                }
              },
              "required": ["type_name"],
              "title": "ColumnSchema",
              "type": "object"
            },
            "StorageBackend": {
              "description": "Describes the storage backend type that is used, and (optionally) some backend-specific properties.",
              "properties": {
                "name": {
                  "description": "The name of the storage backend.",
                  "title": "Name",
                  "type": "string"
                },
                "properties": {
                  "type": "object",
                  "description": "Backend-specific properties.",
                  "title": "Properties"
                }
              },
              "required": ["name"],
              "title": "StorageBackend",
              "type": "object"
            }
          },
          "additionalProperties": false,
          "description": "Describes properties for the 'table' data type.",
          "properties": {
            "column_names": {
              "description": "The name of the columns of the table.",
              "items": {
                "type": "string"
              },
              "title": "Column Names",
              "type": "array"
            },
            "column_schema": {
              "additionalProperties": {
                "$ref": "#/$defs/ColumnSchema"
              },
              "description": "The schema description of the table.",
              "title": "Column Schema",
              "type": "object"
            },
            "backend": {
              "allOf": [
                {
                  "$ref": "#/$defs/StorageBackend"
                }
              ],
              "description": "The storage backend that is used."
            },
            "rows": {
              "description": "The number of rows the table contains.",
              "title": "Rows",
              "type": "integer"
            },
            "size": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The tables size in bytes.",
              "title": "Size"
            }
          },
          "required": ["column_names", "column_schema", "backend", "rows"],
          "title": "TableMetadata",
          "type": "object"
        }
      },
      "kiara_array": {
        "type_name": "kiara_array",
        "documentation": {
          "description": "A class to manage array-like data.",
          "doc": "Internally, this uses an [Apache Arrow Array](https://arrow.apache.org/docs/python/generated/pyarrow.Array.html#pyarrow.Array) to handle the data in memory and on disk."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "KiaraArray",
          "python_module_name": "kiara_plugin.tabular.models.array",
          "full_name": "kiara_plugin.tabular.models.array.KiaraArray"
        },
        "metadata_schema": {
          "additionalProperties": false,
          "description": "A class to manage array-like data.\n\nInternally, this uses an [Apache Arrow Array](https://arrow.apache.org/docs/python/generated/pyarrow.Array.html#pyarrow.Array) to handle the data in memory and on disk.",
          "properties": {
            "data_path": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The path to the (feather) file backing this array.",
              "title": "Data Path"
            }
          },
          "title": "KiaraArray",
          "type": "object"
        }
      },
      "kiara_database": {
        "type_name": "kiara_database",
        "documentation": {
          "description": "A wrapper class to manage a sqlite database.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "KiaraDatabase",
          "python_module_name": "kiara_plugin.tabular.models.db",
          "full_name": "kiara_plugin.tabular.models.db.KiaraDatabase"
        },
        "metadata_schema": {
          "additionalProperties": false,
          "description": "A wrapper class to manage a sqlite database.",
          "properties": {
            "db_file_path": {
              "description": "The path to the sqlite database file.",
              "title": "Db File Path",
              "type": "string"
            }
          },
          "required": ["db_file_path"],
          "title": "KiaraDatabase",
          "type": "object"
        }
      },
      "kiara_table": {
        "type_name": "kiara_table",
        "documentation": {
          "description": "A wrapper class to manage tabular data in a memory efficient way.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "KiaraTable",
          "python_module_name": "kiara_plugin.tabular.models.table",
          "full_name": "kiara_plugin.tabular.models.table.KiaraTable"
        },
        "metadata_schema": {
          "additionalProperties": false,
          "description": "A wrapper class to manage tabular data in a memory efficient way.",
          "properties": {
            "data_path": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "default": null,
              "description": "The path to the (feather) file backing this array.",
              "title": "Data Path"
            }
          },
          "title": "KiaraTable",
          "type": "object"
        }
      },
      "kiara_tables": {
        "type_name": "kiara_tables",
        "documentation": {
          "description": "A wrapper class, containing multiple tables.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "python_class": {
          "python_class_name": "KiaraTables",
          "python_module_name": "kiara_plugin.tabular.models.tables",
          "full_name": "kiara_plugin.tabular.models.tables.KiaraTables"
        },
        "metadata_schema": {
          "$defs": {
            "KiaraTable": {
              "additionalProperties": false,
              "description": "A wrapper class to manage tabular data in a memory efficient way.",
              "properties": {
                "data_path": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "default": null,
                  "description": "The path to the (feather) file backing this array.",
                  "title": "Data Path"
                }
              },
              "title": "KiaraTable",
              "type": "object"
            }
          },
          "additionalProperties": false,
          "description": "A wrapper class, containing multiple tables.",
          "properties": {
            "tables": {
              "additionalProperties": {
                "$ref": "#/$defs/KiaraTable"
              },
              "description": "A dictionary of tables, with the table names as keys.",
              "title": "Tables",
              "type": "object"
            }
          },
          "required": ["tables"],
          "title": "KiaraTables",
          "type": "object"
        }
      }
    },
    "type_name": "kiara_model"
  },
  "operation_types": {
    "group_title": null,
    "item_infos": {},
    "type_name": "operation_type"
  },
  "operations": {
    "group_title": null,
    "item_infos": {
      "assemble.tables": {
        "type_name": "assemble.tables",
        "documentation": {
          "description": "Assemble a 'tables' value from multiple tables.",
          "doc": "Depending on the module configuration, 2 or more tables can be merged into a single 'tables' value."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "assemble.tables",
          "module_config": {},
          "is_resolved": false,
          "operation_id": "assemble.tables",
          "operation_details": {
            "operation_id": "assemble.tables",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Assemble a 'tables' value from multiple tables.",
            "doc": "Depending on the module configuration, 2 or more tables can be merged into a single 'tables' value."
          },
          "module_details": {
            "python_class_name": "AssembleTablesModule",
            "python_module_name": "kiara_plugin.tabular.modules.tables",
            "full_name": "kiara_plugin.tabular.modules.tables.AssembleTablesModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "number_of_tables": null,
              "table_names": null
            },
            "inputs_schema": {
              "table_name_1": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The alias for table #1.",
                  "doc": null
                }
              },
              "table_1": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The table to merge (#1).",
                  "doc": null
                }
              },
              "table_name_2": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The alias for table #2.",
                  "doc": null
                }
              },
              "table_2": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The table to merge (#2).",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "tables": {
                "type": "tables",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The assembled tables instance.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["custom_module"],
        "input_fields": {
          "table_name_1": {
            "field_name": "table_name_1",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The alias for table #1.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": true
          },
          "table_1": {
            "field_name": "table_1",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The table to merge (#1).",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          },
          "table_name_2": {
            "field_name": "table_name_2",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The alias for table #2.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": true
          },
          "table_2": {
            "field_name": "table_2",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The table to merge (#2).",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          }
        },
        "output_fields": {
          "tables": {
            "field_name": "tables",
            "field_schema": {
              "type": "tables",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The assembled tables instance.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "tables",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TablesType",
                "python_module_name": "kiara_plugin.tabular.data_types.tables",
                "full_name": "kiara_plugin.tabular.data_types.tables.TablesType"
              }
            },
            "value_required": true
          }
        }
      },
      "create.database.from.file": {
        "type_name": "create.database.from.file",
        "documentation": {
          "description": "Create a database from a file.",
          "doc": "Currently, only csv files are supported."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "create.database",
          "module_config": {
            "source_type": "file",
            "target_type": "database"
          },
          "is_resolved": false,
          "operation_id": "create.database.from.file",
          "operation_details": {
            "operation_id": "create.database.from.file",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Create a database from a file.",
            "doc": "Currently, only csv files are supported."
          },
          "module_details": {
            "python_class_name": "CreateDatabaseModule",
            "python_module_name": "kiara_plugin.tabular.modules.db",
            "full_name": "kiara_plugin.tabular.modules.db.CreateDatabaseModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "source_type": "file",
              "target_type": "database",
              "ignore_errors": false,
              "merge_into_single_table": false,
              "include_source_metadata": null,
              "include_source_file_content": false
            },
            "inputs_schema": {
              "file": {
                "type": "file",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The source value (of type 'file').",
                  "doc": null
                }
              },
              "first_row_is_header": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "Whether the first row of the file is a header row. If not provided, kiara will try to auto-determine.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "database": {
                "type": "database",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The result value (of type 'database').",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["create_from"],
        "input_fields": {
          "file": {
            "field_name": "file",
            "field_schema": {
              "type": "file",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The source value (of type 'file').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "file",
              "data_type_config": {
                "content_type": null
              },
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "FileValueType",
                "python_module_name": "kiara.data_types.included_core_types.filesystem",
                "full_name": "kiara.data_types.included_core_types.filesystem.FileValueType"
              }
            },
            "value_required": true
          },
          "first_row_is_header": {
            "field_name": "first_row_is_header",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "Whether the first row of the file is a header row. If not provided, kiara will try to auto-determine.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "database": {
            "field_name": "database",
            "field_schema": {
              "type": "database",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The result value (of type 'database').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "database",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "DatabaseType",
                "python_module_name": "kiara_plugin.tabular.data_types.db",
                "full_name": "kiara_plugin.tabular.data_types.db.DatabaseType"
              }
            },
            "value_required": true
          }
        }
      },
      "create.database.from.file_bundle": {
        "type_name": "create.database.from.file_bundle",
        "documentation": {
          "description": "Create a database from a file_bundle value.",
          "doc": "Currently, only csv files are supported, files in the source file_bundle that have different extensions will be ignored.\n\nUnless 'merge_into_single_table' is set to 'True' in the module configuration, each csv file will create one table\nin the resulting database. If this option is set, only a single table with all the values of all\ncsv files will be created. For this to work, all csv files should follow the same schema."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "create.database",
          "module_config": {
            "source_type": "file_bundle",
            "target_type": "database"
          },
          "is_resolved": false,
          "operation_id": "create.database.from.file_bundle",
          "operation_details": {
            "operation_id": "create.database.from.file_bundle",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Create a database from a file_bundle value.",
            "doc": "Currently, only csv files are supported, files in the source file_bundle that have different extensions will be ignored.\n\nUnless 'merge_into_single_table' is set to 'True' in the module configuration, each csv file will create one table\nin the resulting database. If this option is set, only a single table with all the values of all\ncsv files will be created. For this to work, all csv files should follow the same schema."
          },
          "module_details": {
            "python_class_name": "CreateDatabaseModule",
            "python_module_name": "kiara_plugin.tabular.modules.db",
            "full_name": "kiara_plugin.tabular.modules.db.CreateDatabaseModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "source_type": "file_bundle",
              "target_type": "database",
              "ignore_errors": false,
              "merge_into_single_table": false,
              "include_source_metadata": null,
              "include_source_file_content": false
            },
            "inputs_schema": {
              "file_bundle": {
                "type": "file_bundle",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The source value (of type 'file_bundle').",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "database": {
                "type": "database",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The result value (of type 'database').",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["create_from"],
        "input_fields": {
          "file_bundle": {
            "field_name": "file_bundle",
            "field_schema": {
              "type": "file_bundle",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The source value (of type 'file_bundle').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "file_bundle",
              "data_type_config": {
                "content_type": null
              },
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "FileBundleValueType",
                "python_module_name": "kiara.data_types.included_core_types.filesystem",
                "full_name": "kiara.data_types.included_core_types.filesystem.FileBundleValueType"
              }
            },
            "value_required": true
          }
        },
        "output_fields": {
          "database": {
            "field_name": "database",
            "field_schema": {
              "type": "database",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The result value (of type 'database').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "database",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "DatabaseType",
                "python_module_name": "kiara_plugin.tabular.data_types.db",
                "full_name": "kiara_plugin.tabular.data_types.db.DatabaseType"
              }
            },
            "value_required": true
          }
        }
      },
      "create.database.from.table": {
        "type_name": "create.database.from.table",
        "documentation": {
          "description": "Create a database value from a table.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "create.database",
          "module_config": {
            "source_type": "table",
            "target_type": "database"
          },
          "is_resolved": false,
          "operation_id": "create.database.from.table",
          "operation_details": {
            "operation_id": "create.database.from.table",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Create a database value from a table.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "CreateDatabaseModule",
            "python_module_name": "kiara_plugin.tabular.modules.db",
            "full_name": "kiara_plugin.tabular.modules.db.CreateDatabaseModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "source_type": "table",
              "target_type": "database",
              "ignore_errors": false,
              "merge_into_single_table": false,
              "include_source_metadata": null,
              "include_source_file_content": false
            },
            "inputs_schema": {
              "table": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The source value (of type 'table').",
                  "doc": null
                }
              },
              "table_name": {
                "type": "string",
                "type_config": {},
                "default": "imported_table",
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The name of the table in the new database.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "database": {
                "type": "database",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The result value (of type 'database').",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["create_from"],
        "input_fields": {
          "table": {
            "field_name": "table",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The source value (of type 'table').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          },
          "table_name": {
            "field_name": "table_name",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": "imported_table",
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The name of the table in the new database.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "database": {
            "field_name": "database",
            "field_schema": {
              "type": "database",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The result value (of type 'database').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "database",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "DatabaseType",
                "python_module_name": "kiara_plugin.tabular.data_types.db",
                "full_name": "kiara_plugin.tabular.data_types.db.DatabaseType"
              }
            },
            "value_required": true
          }
        }
      },
      "create.database.from.tables": {
        "type_name": "create.database.from.tables",
        "documentation": {
          "description": "Create a database value from a list of tables.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "create.database",
          "module_config": {
            "source_type": "tables",
            "target_type": "database"
          },
          "is_resolved": false,
          "operation_id": "create.database.from.tables",
          "operation_details": {
            "operation_id": "create.database.from.tables",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Create a database value from a list of tables.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "CreateDatabaseModule",
            "python_module_name": "kiara_plugin.tabular.modules.db",
            "full_name": "kiara_plugin.tabular.modules.db.CreateDatabaseModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "source_type": "tables",
              "target_type": "database",
              "ignore_errors": false,
              "merge_into_single_table": false,
              "include_source_metadata": null,
              "include_source_file_content": false
            },
            "inputs_schema": {
              "tables": {
                "type": "tables",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The source value (of type 'tables').",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "database": {
                "type": "database",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The result value (of type 'database').",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["create_from"],
        "input_fields": {
          "tables": {
            "field_name": "tables",
            "field_schema": {
              "type": "tables",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The source value (of type 'tables').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "tables",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TablesType",
                "python_module_name": "kiara_plugin.tabular.data_types.tables",
                "full_name": "kiara_plugin.tabular.data_types.tables.TablesType"
              }
            },
            "value_required": true
          }
        },
        "output_fields": {
          "database": {
            "field_name": "database",
            "field_schema": {
              "type": "database",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The result value (of type 'database').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "database",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "DatabaseType",
                "python_module_name": "kiara_plugin.tabular.data_types.db",
                "full_name": "kiara_plugin.tabular.data_types.db.DatabaseType"
              }
            },
            "value_required": true
          }
        }
      },
      "create.table.from.file": {
        "type_name": "create.table.from.file",
        "documentation": {
          "description": "Create a table from a file, trying to auto-determine the format of said file.",
          "doc": "Currently supported input file types:\n\n- csv\n- parquet"
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "create.table",
          "module_config": {
            "source_type": "file",
            "target_type": "table"
          },
          "is_resolved": false,
          "operation_id": "create.table.from.file",
          "operation_details": {
            "operation_id": "create.table.from.file",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Create a table from a file, trying to auto-determine the format of said file.",
            "doc": "Currently supported input file types:\n\n- csv\n- parquet"
          },
          "module_details": {
            "python_class_name": "CreateTableModule",
            "python_module_name": "kiara_plugin.tabular.modules.table",
            "full_name": "kiara_plugin.tabular.modules.table.CreateTableModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "source_type": "file",
              "target_type": "table",
              "ignore_errors": false
            },
            "inputs_schema": {
              "file": {
                "type": "file",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The source value (of type 'file').",
                  "doc": null
                }
              },
              "first_row_is_header": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "Whether the first row of a (csv) file is a header row. If not provided, kiara will try to auto-determine. Ignored if not a csv file.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "table": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The result value (of type 'table').",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["create_from"],
        "input_fields": {
          "file": {
            "field_name": "file",
            "field_schema": {
              "type": "file",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The source value (of type 'file').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "file",
              "data_type_config": {
                "content_type": null
              },
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "FileValueType",
                "python_module_name": "kiara.data_types.included_core_types.filesystem",
                "full_name": "kiara.data_types.included_core_types.filesystem.FileValueType"
              }
            },
            "value_required": true
          },
          "first_row_is_header": {
            "field_name": "first_row_is_header",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "Whether the first row of a (csv) file is a header row. If not provided, kiara will try to auto-determine. Ignored if not a csv file.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "table": {
            "field_name": "table",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The result value (of type 'table').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          }
        }
      },
      "create.table.from.file_bundle": {
        "type_name": "create.table.from.file_bundle",
        "documentation": {
          "description": "Create a table value from a text file_bundle.",
          "doc": "The resulting table will have (at a minimum) the following columns:\n- id: an auto-assigned index\n- rel_path: the relative path of the file (from the provided base path)\n- content: the text file content"
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "create.table",
          "module_config": {
            "source_type": "file_bundle",
            "target_type": "table"
          },
          "is_resolved": false,
          "operation_id": "create.table.from.file_bundle",
          "operation_details": {
            "operation_id": "create.table.from.file_bundle",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Create a table value from a text file_bundle.",
            "doc": "The resulting table will have (at a minimum) the following columns:\n- id: an auto-assigned index\n- rel_path: the relative path of the file (from the provided base path)\n- content: the text file content"
          },
          "module_details": {
            "python_class_name": "CreateTableModule",
            "python_module_name": "kiara_plugin.tabular.modules.table",
            "full_name": "kiara_plugin.tabular.modules.table.CreateTableModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "source_type": "file_bundle",
              "target_type": "table",
              "ignore_errors": false
            },
            "inputs_schema": {
              "file_bundle": {
                "type": "file_bundle",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The source value (of type 'file_bundle').",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "table": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The result value (of type 'table').",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["create_from"],
        "input_fields": {
          "file_bundle": {
            "field_name": "file_bundle",
            "field_schema": {
              "type": "file_bundle",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The source value (of type 'file_bundle').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "file_bundle",
              "data_type_config": {
                "content_type": null
              },
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "FileBundleValueType",
                "python_module_name": "kiara.data_types.included_core_types.filesystem",
                "full_name": "kiara.data_types.included_core_types.filesystem.FileBundleValueType"
              }
            },
            "value_required": true
          }
        },
        "output_fields": {
          "table": {
            "field_name": "table",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The result value (of type 'table').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          }
        }
      },
      "create.tables.from.file_bundle": {
        "type_name": "create.tables.from.file_bundle",
        "documentation": {
          "description": "Create a database from a file_bundle value.",
          "doc": "Currently, only csv files are supported, files in the source file_bundle that have different extensions will be ignored.\n\nUnless 'merge_into_single_table' is set to 'True' in the module configuration, each csv file will create one table\nin the resulting database. If this option is set, only a single table with all the values of all\ncsv files will be created. For this to work, all csv files should follow the same schema."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "create.tables",
          "module_config": {
            "source_type": "file_bundle",
            "target_type": "tables"
          },
          "is_resolved": false,
          "operation_id": "create.tables.from.file_bundle",
          "operation_details": {
            "operation_id": "create.tables.from.file_bundle",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Create a database from a file_bundle value.",
            "doc": "Currently, only csv files are supported, files in the source file_bundle that have different extensions will be ignored.\n\nUnless 'merge_into_single_table' is set to 'True' in the module configuration, each csv file will create one table\nin the resulting database. If this option is set, only a single table with all the values of all\ncsv files will be created. For this to work, all csv files should follow the same schema."
          },
          "module_details": {
            "python_class_name": "CreateTablesModule",
            "python_module_name": "kiara_plugin.tabular.modules.tables",
            "full_name": "kiara_plugin.tabular.modules.tables.CreateTablesModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "source_type": "file_bundle",
              "target_type": "tables",
              "ignore_errors": false,
              "include_source_metadata": null,
              "include_source_file_content": false
            },
            "inputs_schema": {
              "file_bundle": {
                "type": "file_bundle",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The source value (of type 'file_bundle').",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "tables": {
                "type": "tables",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The result value (of type 'tables').",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["create_from"],
        "input_fields": {
          "file_bundle": {
            "field_name": "file_bundle",
            "field_schema": {
              "type": "file_bundle",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The source value (of type 'file_bundle').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "file_bundle",
              "data_type_config": {
                "content_type": null
              },
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "FileBundleValueType",
                "python_module_name": "kiara.data_types.included_core_types.filesystem",
                "full_name": "kiara.data_types.included_core_types.filesystem.FileBundleValueType"
              }
            },
            "value_required": true
          }
        },
        "output_fields": {
          "tables": {
            "field_name": "tables",
            "field_schema": {
              "type": "tables",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The result value (of type 'tables').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "tables",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TablesType",
                "python_module_name": "kiara_plugin.tabular.data_types.tables",
                "full_name": "kiara_plugin.tabular.data_types.tables.TablesType"
              }
            },
            "value_required": true
          }
        }
      },
      "deserialize.array.as.python_object": {
        "type_name": "deserialize.array.as.python_object",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "load.array",
          "module_config": {
            "value_type": "array",
            "target_profile": "python_object",
            "serialization_profile": "feather"
          },
          "is_resolved": false,
          "operation_id": "deserialize.array.as.python_object",
          "operation_details": {
            "operation_id": "deserialize.array.as.python_object",
            "is_internal_operation": true
          },
          "doc": {
            "description": "-- n/a --",
            "doc": null
          },
          "module_details": {
            "python_class_name": "DeserializeArrayModule",
            "python_module_name": "kiara_plugin.tabular.modules.array",
            "full_name": "kiara_plugin.tabular.modules.array.DeserializeArrayModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "value_type": "array",
              "target_profile": "python_object",
              "serialization_profile": "feather"
            },
            "inputs_schema": {
              "array": {
                "type": "array",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The value object.",
                  "doc": null
                }
              },
              "deserialization_config": {
                "type": "any",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "Serialization-format specific configuration.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "python_object": {
                "type": "python_object",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The deserialized python object instance.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["deserialize"],
        "input_fields": {
          "array": {
            "field_name": "array",
            "field_schema": {
              "type": "array",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The value object.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "array",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "ArrayType",
                "python_module_name": "kiara_plugin.tabular.data_types.array",
                "full_name": "kiara_plugin.tabular.data_types.array.ArrayType"
              }
            },
            "value_required": true
          },
          "deserialization_config": {
            "field_name": "deserialization_config",
            "field_schema": {
              "type": "any",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "Serialization-format specific configuration.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "any",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "AnyType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.AnyType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "python_object": {
            "field_name": "python_object",
            "field_schema": {
              "type": "python_object",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The deserialized python object instance.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "internal",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "PythonObjectType",
                "python_module_name": "kiara.data_types.included_core_types.serialization",
                "full_name": "kiara.data_types.included_core_types.serialization.PythonObjectType"
              }
            },
            "value_required": true
          }
        }
      },
      "deserialize.database.as.python_object": {
        "type_name": "deserialize.database.as.python_object",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "load.database",
          "module_config": {
            "value_type": "database",
            "target_profile": "python_object",
            "serialization_profile": "copy"
          },
          "is_resolved": false,
          "operation_id": "deserialize.database.as.python_object",
          "operation_details": {
            "operation_id": "deserialize.database.as.python_object",
            "is_internal_operation": true
          },
          "doc": {
            "description": "-- n/a --",
            "doc": null
          },
          "module_details": {
            "python_class_name": "LoadDatabaseFromDiskModule",
            "python_module_name": "kiara_plugin.tabular.modules.db",
            "full_name": "kiara_plugin.tabular.modules.db.LoadDatabaseFromDiskModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "value_type": "database",
              "target_profile": "python_object",
              "serialization_profile": "copy"
            },
            "inputs_schema": {
              "database": {
                "type": "database",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The value object.",
                  "doc": null
                }
              },
              "deserialization_config": {
                "type": "any",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "Serialization-format specific configuration.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "python_object": {
                "type": "python_object",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The deserialized python object instance.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["deserialize"],
        "input_fields": {
          "database": {
            "field_name": "database",
            "field_schema": {
              "type": "database",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The value object.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "database",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "DatabaseType",
                "python_module_name": "kiara_plugin.tabular.data_types.db",
                "full_name": "kiara_plugin.tabular.data_types.db.DatabaseType"
              }
            },
            "value_required": true
          },
          "deserialization_config": {
            "field_name": "deserialization_config",
            "field_schema": {
              "type": "any",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "Serialization-format specific configuration.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "any",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "AnyType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.AnyType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "python_object": {
            "field_name": "python_object",
            "field_schema": {
              "type": "python_object",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The deserialized python object instance.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "internal",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "PythonObjectType",
                "python_module_name": "kiara.data_types.included_core_types.serialization",
                "full_name": "kiara.data_types.included_core_types.serialization.PythonObjectType"
              }
            },
            "value_required": true
          }
        }
      },
      "deserialize.table.as.python_object": {
        "type_name": "deserialize.table.as.python_object",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "load.table",
          "module_config": {
            "value_type": "table",
            "target_profile": "python_object",
            "serialization_profile": "feather"
          },
          "is_resolved": false,
          "operation_id": "deserialize.table.as.python_object",
          "operation_details": {
            "operation_id": "deserialize.table.as.python_object",
            "is_internal_operation": true
          },
          "doc": {
            "description": "-- n/a --",
            "doc": null
          },
          "module_details": {
            "python_class_name": "DeserializeTableModule",
            "python_module_name": "kiara_plugin.tabular.modules.table",
            "full_name": "kiara_plugin.tabular.modules.table.DeserializeTableModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "value_type": "table",
              "target_profile": "python_object",
              "serialization_profile": "feather"
            },
            "inputs_schema": {
              "table": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The value object.",
                  "doc": null
                }
              },
              "deserialization_config": {
                "type": "any",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "Serialization-format specific configuration.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "python_object": {
                "type": "python_object",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The deserialized python object instance.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["deserialize"],
        "input_fields": {
          "table": {
            "field_name": "table",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The value object.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          },
          "deserialization_config": {
            "field_name": "deserialization_config",
            "field_schema": {
              "type": "any",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "Serialization-format specific configuration.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "any",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "AnyType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.AnyType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "python_object": {
            "field_name": "python_object",
            "field_schema": {
              "type": "python_object",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The deserialized python object instance.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "internal",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "PythonObjectType",
                "python_module_name": "kiara.data_types.included_core_types.serialization",
                "full_name": "kiara.data_types.included_core_types.serialization.PythonObjectType"
              }
            },
            "value_required": true
          }
        }
      },
      "deserialize.tables.as.python_object": {
        "type_name": "deserialize.tables.as.python_object",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "load.tables",
          "module_config": {
            "value_type": "tables",
            "target_profile": "python_object",
            "serialization_profile": "feather"
          },
          "is_resolved": false,
          "operation_id": "deserialize.tables.as.python_object",
          "operation_details": {
            "operation_id": "deserialize.tables.as.python_object",
            "is_internal_operation": true
          },
          "doc": {
            "description": "-- n/a --",
            "doc": null
          },
          "module_details": {
            "python_class_name": "DeserializeTableModule",
            "python_module_name": "kiara_plugin.tabular.modules.tables",
            "full_name": "kiara_plugin.tabular.modules.tables.DeserializeTableModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "value_type": "tables",
              "target_profile": "python_object",
              "serialization_profile": "feather"
            },
            "inputs_schema": {
              "tables": {
                "type": "tables",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The value object.",
                  "doc": null
                }
              },
              "deserialization_config": {
                "type": "any",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "Serialization-format specific configuration.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "python_object": {
                "type": "python_object",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The deserialized python object instance.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["deserialize"],
        "input_fields": {
          "tables": {
            "field_name": "tables",
            "field_schema": {
              "type": "tables",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The value object.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "tables",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TablesType",
                "python_module_name": "kiara_plugin.tabular.data_types.tables",
                "full_name": "kiara_plugin.tabular.data_types.tables.TablesType"
              }
            },
            "value_required": true
          },
          "deserialization_config": {
            "field_name": "deserialization_config",
            "field_schema": {
              "type": "any",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "Serialization-format specific configuration.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "any",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "AnyType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.AnyType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "python_object": {
            "field_name": "python_object",
            "field_schema": {
              "type": "python_object",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The deserialized python object instance.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "internal",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "PythonObjectType",
                "python_module_name": "kiara.data_types.included_core_types.serialization",
                "full_name": "kiara.data_types.included_core_types.serialization.PythonObjectType"
              }
            },
            "value_required": true
          }
        }
      },
      "export.database.as.csv_files": {
        "type_name": "export.database.as.csv_files",
        "documentation": {
          "description": "Export network data as 2 csv files (one for edges, one for nodes.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "export.database",
          "module_config": {
            "source_type": "database",
            "target_profile": "csv_files"
          },
          "is_resolved": false,
          "operation_id": "export.database.as.csv_files",
          "operation_details": {
            "operation_id": "export.database.as.csv_files",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Export network data as 2 csv files (one for edges, one for nodes.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "ExportNetworkDataModule",
            "python_module_name": "kiara_plugin.tabular.modules.db",
            "full_name": "kiara_plugin.tabular.modules.db.ExportNetworkDataModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "target_profile": "csv_files",
              "source_type": "database"
            },
            "inputs_schema": {
              "database": {
                "type": "database",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A value of type 'database'.",
                  "doc": null
                }
              },
              "base_path": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The directory to export the file(s) to.",
                  "doc": null
                }
              },
              "name": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The (base) name of the exported file(s).",
                  "doc": null
                }
              },
              "export_metadata": {
                "type": "boolean",
                "type_config": {},
                "default": false,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Whether to also export the value metadata.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "export_details": {
                "type": "dict",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Details about the exported files/folders.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["export_as"],
        "input_fields": {
          "database": {
            "field_name": "database",
            "field_schema": {
              "type": "database",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A value of type 'database'.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "database",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "DatabaseType",
                "python_module_name": "kiara_plugin.tabular.data_types.db",
                "full_name": "kiara_plugin.tabular.data_types.db.DatabaseType"
              }
            },
            "value_required": true
          },
          "base_path": {
            "field_name": "base_path",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The directory to export the file(s) to.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          },
          "name": {
            "field_name": "name",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The (base) name of the exported file(s).",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          },
          "export_metadata": {
            "field_name": "export_metadata",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": false,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Whether to also export the value metadata.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "export_details": {
            "field_name": "export_details",
            "field_schema": {
              "type": "dict",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Details about the exported files/folders.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "dict",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "DictValueType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.DictValueType"
              }
            },
            "value_required": true
          }
        }
      },
      "export.database.as.sql_dump": {
        "type_name": "export.database.as.sql_dump",
        "documentation": {
          "description": "Export network data as a sql dump file.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "export.database",
          "module_config": {
            "source_type": "database",
            "target_profile": "sql_dump"
          },
          "is_resolved": false,
          "operation_id": "export.database.as.sql_dump",
          "operation_details": {
            "operation_id": "export.database.as.sql_dump",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Export network data as a sql dump file.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "ExportNetworkDataModule",
            "python_module_name": "kiara_plugin.tabular.modules.db",
            "full_name": "kiara_plugin.tabular.modules.db.ExportNetworkDataModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "target_profile": "sql_dump",
              "source_type": "database"
            },
            "inputs_schema": {
              "database": {
                "type": "database",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A value of type 'database'.",
                  "doc": null
                }
              },
              "base_path": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The directory to export the file(s) to.",
                  "doc": null
                }
              },
              "name": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The (base) name of the exported file(s).",
                  "doc": null
                }
              },
              "export_metadata": {
                "type": "boolean",
                "type_config": {},
                "default": false,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Whether to also export the value metadata.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "export_details": {
                "type": "dict",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Details about the exported files/folders.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["export_as"],
        "input_fields": {
          "database": {
            "field_name": "database",
            "field_schema": {
              "type": "database",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A value of type 'database'.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "database",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "DatabaseType",
                "python_module_name": "kiara_plugin.tabular.data_types.db",
                "full_name": "kiara_plugin.tabular.data_types.db.DatabaseType"
              }
            },
            "value_required": true
          },
          "base_path": {
            "field_name": "base_path",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The directory to export the file(s) to.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          },
          "name": {
            "field_name": "name",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The (base) name of the exported file(s).",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          },
          "export_metadata": {
            "field_name": "export_metadata",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": false,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Whether to also export the value metadata.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "export_details": {
            "field_name": "export_details",
            "field_schema": {
              "type": "dict",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Details about the exported files/folders.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "dict",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "DictValueType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.DictValueType"
              }
            },
            "value_required": true
          }
        }
      },
      "export.database.as.sqlite_db": {
        "type_name": "export.database.as.sqlite_db",
        "documentation": {
          "description": "Export network data as a sqlite database file.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "export.database",
          "module_config": {
            "source_type": "database",
            "target_profile": "sqlite_db"
          },
          "is_resolved": false,
          "operation_id": "export.database.as.sqlite_db",
          "operation_details": {
            "operation_id": "export.database.as.sqlite_db",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Export network data as a sqlite database file.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "ExportNetworkDataModule",
            "python_module_name": "kiara_plugin.tabular.modules.db",
            "full_name": "kiara_plugin.tabular.modules.db.ExportNetworkDataModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "target_profile": "sqlite_db",
              "source_type": "database"
            },
            "inputs_schema": {
              "database": {
                "type": "database",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A value of type 'database'.",
                  "doc": null
                }
              },
              "base_path": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The directory to export the file(s) to.",
                  "doc": null
                }
              },
              "name": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The (base) name of the exported file(s).",
                  "doc": null
                }
              },
              "export_metadata": {
                "type": "boolean",
                "type_config": {},
                "default": false,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Whether to also export the value metadata.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "export_details": {
                "type": "dict",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Details about the exported files/folders.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["export_as"],
        "input_fields": {
          "database": {
            "field_name": "database",
            "field_schema": {
              "type": "database",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A value of type 'database'.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "database",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "DatabaseType",
                "python_module_name": "kiara_plugin.tabular.data_types.db",
                "full_name": "kiara_plugin.tabular.data_types.db.DatabaseType"
              }
            },
            "value_required": true
          },
          "base_path": {
            "field_name": "base_path",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The directory to export the file(s) to.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          },
          "name": {
            "field_name": "name",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The (base) name of the exported file(s).",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          },
          "export_metadata": {
            "field_name": "export_metadata",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": false,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Whether to also export the value metadata.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "export_details": {
            "field_name": "export_details",
            "field_schema": {
              "type": "dict",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Details about the exported files/folders.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "dict",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "DictValueType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.DictValueType"
              }
            },
            "value_required": true
          }
        }
      },
      "export.table.as.csv_file": {
        "type_name": "export.table.as.csv_file",
        "documentation": {
          "description": "Export a table as csv file.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "export.table",
          "module_config": {
            "source_type": "table",
            "target_profile": "csv_file"
          },
          "is_resolved": false,
          "operation_id": "export.table.as.csv_file",
          "operation_details": {
            "operation_id": "export.table.as.csv_file",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Export a table as csv file.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "ExportTableModule",
            "python_module_name": "kiara_plugin.tabular.modules.table",
            "full_name": "kiara_plugin.tabular.modules.table.ExportTableModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "target_profile": "csv_file",
              "source_type": "table"
            },
            "inputs_schema": {
              "table": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A value of type 'table'.",
                  "doc": null
                }
              },
              "base_path": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The directory to export the file(s) to.",
                  "doc": null
                }
              },
              "name": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The (base) name of the exported file(s).",
                  "doc": null
                }
              },
              "export_metadata": {
                "type": "boolean",
                "type_config": {},
                "default": false,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Whether to also export the value metadata.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "export_details": {
                "type": "dict",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Details about the exported files/folders.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["export_as"],
        "input_fields": {
          "table": {
            "field_name": "table",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A value of type 'table'.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          },
          "base_path": {
            "field_name": "base_path",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The directory to export the file(s) to.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          },
          "name": {
            "field_name": "name",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The (base) name of the exported file(s).",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          },
          "export_metadata": {
            "field_name": "export_metadata",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": false,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Whether to also export the value metadata.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "export_details": {
            "field_name": "export_details",
            "field_schema": {
              "type": "dict",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Details about the exported files/folders.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "dict",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "DictValueType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.DictValueType"
              }
            },
            "value_required": true
          }
        }
      },
      "export.tables.as.csv_files": {
        "type_name": "export.tables.as.csv_files",
        "documentation": {
          "description": "Export network data as 2 csv files (one for edges, one for nodes.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "export.tables",
          "module_config": {
            "source_type": "tables",
            "target_profile": "csv_files"
          },
          "is_resolved": false,
          "operation_id": "export.tables.as.csv_files",
          "operation_details": {
            "operation_id": "export.tables.as.csv_files",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Export network data as 2 csv files (one for edges, one for nodes.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "ExportNetworkDataModule",
            "python_module_name": "kiara_plugin.tabular.modules.tables",
            "full_name": "kiara_plugin.tabular.modules.tables.ExportNetworkDataModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "target_profile": "csv_files",
              "source_type": "tables"
            },
            "inputs_schema": {
              "tables": {
                "type": "tables",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A value of type 'tables'.",
                  "doc": null
                }
              },
              "base_path": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The directory to export the file(s) to.",
                  "doc": null
                }
              },
              "name": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The (base) name of the exported file(s).",
                  "doc": null
                }
              },
              "export_metadata": {
                "type": "boolean",
                "type_config": {},
                "default": false,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Whether to also export the value metadata.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "export_details": {
                "type": "dict",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Details about the exported files/folders.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["export_as"],
        "input_fields": {
          "tables": {
            "field_name": "tables",
            "field_schema": {
              "type": "tables",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A value of type 'tables'.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "tables",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TablesType",
                "python_module_name": "kiara_plugin.tabular.data_types.tables",
                "full_name": "kiara_plugin.tabular.data_types.tables.TablesType"
              }
            },
            "value_required": true
          },
          "base_path": {
            "field_name": "base_path",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The directory to export the file(s) to.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          },
          "name": {
            "field_name": "name",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The (base) name of the exported file(s).",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          },
          "export_metadata": {
            "field_name": "export_metadata",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": false,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Whether to also export the value metadata.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "export_details": {
            "field_name": "export_details",
            "field_schema": {
              "type": "dict",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Details about the exported files/folders.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "dict",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "DictValueType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.DictValueType"
              }
            },
            "value_required": true
          }
        }
      },
      "export.tables.as.sql_dump": {
        "type_name": "export.tables.as.sql_dump",
        "documentation": {
          "description": "Export network data as a sql dump file.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "export.tables",
          "module_config": {
            "source_type": "tables",
            "target_profile": "sql_dump"
          },
          "is_resolved": false,
          "operation_id": "export.tables.as.sql_dump",
          "operation_details": {
            "operation_id": "export.tables.as.sql_dump",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Export network data as a sql dump file.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "ExportNetworkDataModule",
            "python_module_name": "kiara_plugin.tabular.modules.tables",
            "full_name": "kiara_plugin.tabular.modules.tables.ExportNetworkDataModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "target_profile": "sql_dump",
              "source_type": "tables"
            },
            "inputs_schema": {
              "tables": {
                "type": "tables",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A value of type 'tables'.",
                  "doc": null
                }
              },
              "base_path": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The directory to export the file(s) to.",
                  "doc": null
                }
              },
              "name": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The (base) name of the exported file(s).",
                  "doc": null
                }
              },
              "export_metadata": {
                "type": "boolean",
                "type_config": {},
                "default": false,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Whether to also export the value metadata.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "export_details": {
                "type": "dict",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Details about the exported files/folders.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["export_as"],
        "input_fields": {
          "tables": {
            "field_name": "tables",
            "field_schema": {
              "type": "tables",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A value of type 'tables'.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "tables",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TablesType",
                "python_module_name": "kiara_plugin.tabular.data_types.tables",
                "full_name": "kiara_plugin.tabular.data_types.tables.TablesType"
              }
            },
            "value_required": true
          },
          "base_path": {
            "field_name": "base_path",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The directory to export the file(s) to.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          },
          "name": {
            "field_name": "name",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The (base) name of the exported file(s).",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          },
          "export_metadata": {
            "field_name": "export_metadata",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": false,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Whether to also export the value metadata.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "export_details": {
            "field_name": "export_details",
            "field_schema": {
              "type": "dict",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Details about the exported files/folders.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "dict",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "DictValueType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.DictValueType"
              }
            },
            "value_required": true
          }
        }
      },
      "export.tables.as.sqlite_db": {
        "type_name": "export.tables.as.sqlite_db",
        "documentation": {
          "description": "Export network data as a sqlite database file.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "export.tables",
          "module_config": {
            "source_type": "tables",
            "target_profile": "sqlite_db"
          },
          "is_resolved": false,
          "operation_id": "export.tables.as.sqlite_db",
          "operation_details": {
            "operation_id": "export.tables.as.sqlite_db",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Export network data as a sqlite database file.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "ExportNetworkDataModule",
            "python_module_name": "kiara_plugin.tabular.modules.tables",
            "full_name": "kiara_plugin.tabular.modules.tables.ExportNetworkDataModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "target_profile": "sqlite_db",
              "source_type": "tables"
            },
            "inputs_schema": {
              "tables": {
                "type": "tables",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A value of type 'tables'.",
                  "doc": null
                }
              },
              "base_path": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The directory to export the file(s) to.",
                  "doc": null
                }
              },
              "name": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The (base) name of the exported file(s).",
                  "doc": null
                }
              },
              "export_metadata": {
                "type": "boolean",
                "type_config": {},
                "default": false,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Whether to also export the value metadata.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "export_details": {
                "type": "dict",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Details about the exported files/folders.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["export_as"],
        "input_fields": {
          "tables": {
            "field_name": "tables",
            "field_schema": {
              "type": "tables",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A value of type 'tables'.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "tables",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TablesType",
                "python_module_name": "kiara_plugin.tabular.data_types.tables",
                "full_name": "kiara_plugin.tabular.data_types.tables.TablesType"
              }
            },
            "value_required": true
          },
          "base_path": {
            "field_name": "base_path",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The directory to export the file(s) to.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          },
          "name": {
            "field_name": "name",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The (base) name of the exported file(s).",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          },
          "export_metadata": {
            "field_name": "export_metadata",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": false,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Whether to also export the value metadata.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "export_details": {
            "field_name": "export_details",
            "field_schema": {
              "type": "dict",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Details about the exported files/folders.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "dict",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "DictValueType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.DictValueType"
              }
            },
            "value_required": true
          }
        }
      },
      "extract.date_array.from.table": {
        "type_name": "extract.date_array.from.table",
        "documentation": {
          "description": "Extract a date array from a table column.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara",
              "desc": "The kiara project git repository."
            },
            "documentation": {
              "url": "https://dharpa.org/kiara_documentation/",
              "desc": "The url for kiara documentation."
            }
          },
          "tags": [],
          "labels": {
            "package": "kiara"
          }
        },
        "operation": {
          "module_type": "pipeline",
          "module_config": {
            "constants": {},
            "defaults": {},
            "pipeline_name": "extract.date_array.from.table",
            "steps": [
              {
                "module_type": "table.pick.column",
                "module_config": {},
                "is_resolved": false,
                "step_id": "pick_column",
                "manifest_src": {
                  "module_type": "table.pick.column",
                  "module_config": {},
                  "is_resolved": false
                },
                "input_links": {},
                "module_details": {
                  "python_class_name": "PickColumnModule",
                  "python_module_name": "kiara_plugin.tabular.modules.table",
                  "full_name": "kiara_plugin.tabular.modules.table.PickColumnModule",
                  "module_config": {
                    "constants": {},
                    "defaults": {},
                    "column_name": null
                  },
                  "inputs_schema": {
                    "table": {
                      "type": "table",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "A table.",
                        "doc": null
                      }
                    },
                    "column_name": {
                      "type": "string",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "The name of the column to extract.",
                        "doc": null
                      }
                    }
                  },
                  "outputs_schema": {
                    "array": {
                      "type": "array",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "The column.",
                        "doc": null
                      }
                    }
                  }
                },
                "doc": {
                  "description": "Pick one column from a table, returning an array.",
                  "doc": null
                }
              },
              {
                "module_type": "parse.date_array",
                "module_config": {},
                "is_resolved": false,
                "step_id": "parse_date_array",
                "manifest_src": {
                  "module_type": "parse.date_array",
                  "module_config": {},
                  "is_resolved": false
                },
                "input_links": {
                  "array": [
                    {
                      "step_id": "pick_column",
                      "value_name": "array",
                      "sub_value": null
                    }
                  ]
                },
                "module_details": {
                  "python_class_name": "ExtractDateModule",
                  "python_module_name": "kiara_plugin.tabular.modules.array",
                  "full_name": "kiara_plugin.tabular.modules.array.ExtractDateModule",
                  "module_config": {
                    "constants": {},
                    "defaults": {},
                    "add_inputs": true,
                    "input_fields": [],
                    "force_non_null": true,
                    "min_index": null,
                    "max_index": null,
                    "remove_tokens": []
                  },
                  "inputs_schema": {
                    "array": {
                      "type": "array",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "The input array.",
                        "doc": null
                      }
                    },
                    "force_non_null": {
                      "type": "boolean",
                      "type_config": {},
                      "default": true,
                      "optional": true,
                      "is_constant": false,
                      "doc": {
                        "description": "If set to 'True', raise an error if any of the strings in the array can't be parsed.",
                        "doc": null
                      }
                    },
                    "min_index": {
                      "type": "integer",
                      "type_config": {},
                      "default": null,
                      "optional": true,
                      "is_constant": false,
                      "doc": {
                        "description": "The minimum index from where to start parsing the string(s).",
                        "doc": null
                      }
                    },
                    "max_index": {
                      "type": "integer",
                      "type_config": {},
                      "default": null,
                      "optional": true,
                      "is_constant": false,
                      "doc": {
                        "description": "The maximum index until whic to parse the string(s).",
                        "doc": null
                      }
                    },
                    "remove_tokens": {
                      "type": "list",
                      "type_config": {},
                      "default": null,
                      "optional": true,
                      "is_constant": false,
                      "doc": {
                        "description": "A list of tokens/characters to replace with a single white-space before parsing the input.",
                        "doc": null
                      }
                    }
                  },
                  "outputs_schema": {
                    "date_array": {
                      "type": "array",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "The resulting array with items of a date data type.",
                        "doc": null
                      }
                    }
                  }
                },
                "doc": {
                  "description": "Create an array of date objects from an array of strings.",
                  "doc": "This module is very simplistic at the moment, more functionality and options will be added in the future.\n\nAt its core, this module uses the standard parser from the\n[dateutil](https://github.com/dateutil/dateutil) package to parse strings into dates. As this parser can't handle\n complex strings, the input strings can be pre-processed in the following ways:\n\n- 'cut' non-relevant parts of the string (using 'min_index' & 'max_index' input/config options)\n- remove matching tokens from the string, and replace them with a single whitespace (using the 'remove_tokens' option)\n\nBy default, if an input string can't be parsed this module will raise an exception. This can be prevented by\nsetting this modules 'force_non_null' config option or input to 'False', in which case un-parsable strings\nwill appear as 'NULL' value in the resulting array."
                }
              }
            ],
            "input_aliases": {
              "pick_column.table": "table",
              "pick_column.column_name": "column_name"
            },
            "output_aliases": {
              "parse_date_array.date_array": "date_array"
            },
            "doc": {
              "description": "Extract a date array from a table column.",
              "doc": null
            },
            "context": {}
          },
          "is_resolved": false,
          "operation_id": "extract.date_array.from.table",
          "operation_details": {
            "operation_id": "extract.date_array.from.table",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Extract a date array from a table column.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "PipelineModule",
            "python_module_name": "kiara.modules.included_core_modules.pipeline",
            "full_name": "kiara.modules.included_core_modules.pipeline.PipelineModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "pipeline_name": "extract.date_array.from.table",
              "steps": [
                {
                  "module_type": "table.pick.column",
                  "module_config": {},
                  "is_resolved": false,
                  "step_id": "pick_column",
                  "manifest_src": {
                    "module_type": "table.pick.column",
                    "module_config": {},
                    "is_resolved": false
                  },
                  "input_links": {},
                  "module_details": {
                    "python_class_name": "PickColumnModule",
                    "python_module_name": "kiara_plugin.tabular.modules.table",
                    "full_name": "kiara_plugin.tabular.modules.table.PickColumnModule",
                    "module_config": {
                      "constants": {},
                      "defaults": {},
                      "column_name": null
                    },
                    "inputs_schema": {
                      "table": {
                        "type": "table",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "A table.",
                          "doc": null
                        }
                      },
                      "column_name": {
                        "type": "string",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "The name of the column to extract.",
                          "doc": null
                        }
                      }
                    },
                    "outputs_schema": {
                      "array": {
                        "type": "array",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "The column.",
                          "doc": null
                        }
                      }
                    }
                  },
                  "doc": {
                    "description": "Pick one column from a table, returning an array.",
                    "doc": null
                  }
                },
                {
                  "module_type": "parse.date_array",
                  "module_config": {},
                  "is_resolved": false,
                  "step_id": "parse_date_array",
                  "manifest_src": {
                    "module_type": "parse.date_array",
                    "module_config": {},
                    "is_resolved": false
                  },
                  "input_links": {
                    "array": [
                      {
                        "step_id": "pick_column",
                        "value_name": "array",
                        "sub_value": null
                      }
                    ]
                  },
                  "module_details": {
                    "python_class_name": "ExtractDateModule",
                    "python_module_name": "kiara_plugin.tabular.modules.array",
                    "full_name": "kiara_plugin.tabular.modules.array.ExtractDateModule",
                    "module_config": {
                      "constants": {},
                      "defaults": {},
                      "add_inputs": true,
                      "input_fields": [],
                      "force_non_null": true,
                      "min_index": null,
                      "max_index": null,
                      "remove_tokens": []
                    },
                    "inputs_schema": {
                      "array": {
                        "type": "array",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "The input array.",
                          "doc": null
                        }
                      },
                      "force_non_null": {
                        "type": "boolean",
                        "type_config": {},
                        "default": true,
                        "optional": true,
                        "is_constant": false,
                        "doc": {
                          "description": "If set to 'True', raise an error if any of the strings in the array can't be parsed.",
                          "doc": null
                        }
                      },
                      "min_index": {
                        "type": "integer",
                        "type_config": {},
                        "default": null,
                        "optional": true,
                        "is_constant": false,
                        "doc": {
                          "description": "The minimum index from where to start parsing the string(s).",
                          "doc": null
                        }
                      },
                      "max_index": {
                        "type": "integer",
                        "type_config": {},
                        "default": null,
                        "optional": true,
                        "is_constant": false,
                        "doc": {
                          "description": "The maximum index until whic to parse the string(s).",
                          "doc": null
                        }
                      },
                      "remove_tokens": {
                        "type": "list",
                        "type_config": {},
                        "default": null,
                        "optional": true,
                        "is_constant": false,
                        "doc": {
                          "description": "A list of tokens/characters to replace with a single white-space before parsing the input.",
                          "doc": null
                        }
                      }
                    },
                    "outputs_schema": {
                      "date_array": {
                        "type": "array",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "The resulting array with items of a date data type.",
                          "doc": null
                        }
                      }
                    }
                  },
                  "doc": {
                    "description": "Create an array of date objects from an array of strings.",
                    "doc": "This module is very simplistic at the moment, more functionality and options will be added in the future.\n\nAt its core, this module uses the standard parser from the\n[dateutil](https://github.com/dateutil/dateutil) package to parse strings into dates. As this parser can't handle\n complex strings, the input strings can be pre-processed in the following ways:\n\n- 'cut' non-relevant parts of the string (using 'min_index' & 'max_index' input/config options)\n- remove matching tokens from the string, and replace them with a single whitespace (using the 'remove_tokens' option)\n\nBy default, if an input string can't be parsed this module will raise an exception. This can be prevented by\nsetting this modules 'force_non_null' config option or input to 'False', in which case un-parsable strings\nwill appear as 'NULL' value in the resulting array."
                  }
                }
              ],
              "input_aliases": {
                "pick_column.table": "table",
                "pick_column.column_name": "column_name"
              },
              "output_aliases": {
                "parse_date_array.date_array": "date_array"
              },
              "doc": {
                "description": "Extract a date array from a table column.",
                "doc": null
              },
              "context": {}
            },
            "inputs_schema": {
              "table": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A table.",
                  "doc": null
                }
              },
              "column_name": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The name of the column to extract.",
                  "doc": null
                }
              },
              "parse_date_array__force_non_null": {
                "type": "boolean",
                "type_config": {},
                "default": true,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "If set to 'True', raise an error if any of the strings in the array can't be parsed.",
                  "doc": null
                }
              },
              "parse_date_array__min_index": {
                "type": "integer",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The minimum index from where to start parsing the string(s).",
                  "doc": null
                }
              },
              "parse_date_array__max_index": {
                "type": "integer",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The maximum index until whic to parse the string(s).",
                  "doc": null
                }
              },
              "parse_date_array__remove_tokens": {
                "type": "list",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "A list of tokens/characters to replace with a single white-space before parsing the input.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "date_array": {
                "type": "array",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The resulting array with items of a date data type.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {
            "authors": [
              {
                "name": "Markus Binsteiner",
                "email": "markus@frkl.io"
              }
            ],
            "description": "Kiara modules for: tabular",
            "references": {
              "source_repo": {
                "desc": "The module package git repository.",
                "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular"
              },
              "documentation": {
                "desc": "The url for the module package documentation.",
                "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/"
              }
            },
            "tags": ["tabular"],
            "labels": {
              "package": "kiara_plugin.tabular"
            }
          }
        },
        "operation_types": ["pipeline"],
        "input_fields": {
          "table": {
            "field_name": "table",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A table.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          },
          "column_name": {
            "field_name": "column_name",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The name of the column to extract.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": true
          },
          "parse_date_array__force_non_null": {
            "field_name": "parse_date_array__force_non_null",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": true,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "If set to 'True', raise an error if any of the strings in the array can't be parsed.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": false
          },
          "parse_date_array__min_index": {
            "field_name": "parse_date_array__min_index",
            "field_schema": {
              "type": "integer",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The minimum index from where to start parsing the string(s).",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "integer",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "IntegerType",
                "python_module_name": "kiara_plugin.core_types.data_types",
                "full_name": "kiara_plugin.core_types.data_types.IntegerType"
              }
            },
            "value_required": false
          },
          "parse_date_array__max_index": {
            "field_name": "parse_date_array__max_index",
            "field_schema": {
              "type": "integer",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The maximum index until whic to parse the string(s).",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "integer",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "IntegerType",
                "python_module_name": "kiara_plugin.core_types.data_types",
                "full_name": "kiara_plugin.core_types.data_types.IntegerType"
              }
            },
            "value_required": false
          },
          "parse_date_array__remove_tokens": {
            "field_name": "parse_date_array__remove_tokens",
            "field_schema": {
              "type": "list",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "A list of tokens/characters to replace with a single white-space before parsing the input.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "list",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "ListValueType",
                "python_module_name": "kiara_plugin.core_types.data_types",
                "full_name": "kiara_plugin.core_types.data_types.ListValueType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "date_array": {
            "field_name": "date_array",
            "field_schema": {
              "type": "array",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The resulting array with items of a date data type.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "array",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "ArrayType",
                "python_module_name": "kiara_plugin.tabular.data_types.array",
                "full_name": "kiara_plugin.tabular.data_types.array.ArrayType"
              }
            },
            "value_required": true
          }
        }
      },
      "import.database.from.local_file_path": {
        "type_name": "import.database.from.local_file_path",
        "documentation": {
          "description": "Import a database from a csv file.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara",
              "desc": "The kiara project git repository."
            },
            "documentation": {
              "url": "https://dharpa.org/kiara_documentation/",
              "desc": "The url for kiara documentation."
            }
          },
          "tags": [],
          "labels": {
            "package": "kiara"
          }
        },
        "operation": {
          "module_type": "pipeline",
          "module_config": {
            "constants": {},
            "defaults": {},
            "pipeline_name": "import.database.from.local_file_path",
            "steps": [
              {
                "module_type": "import.local.file",
                "module_config": {},
                "is_resolved": false,
                "step_id": "import_file",
                "manifest_src": {
                  "module_type": "import.local.file",
                  "module_config": {},
                  "is_resolved": false
                },
                "input_links": {},
                "module_details": {
                  "python_class_name": "ImportLocalFileModule",
                  "python_module_name": "kiara.modules.included_core_modules.filesystem",
                  "full_name": "kiara.modules.included_core_modules.filesystem.ImportLocalFileModule",
                  "module_config": {
                    "constants": {},
                    "defaults": {}
                  },
                  "inputs_schema": {
                    "path": {
                      "type": "string",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "The local path to the file (absolute, or relative to current directory.",
                        "doc": null
                      }
                    }
                  },
                  "outputs_schema": {
                    "file": {
                      "type": "file",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "The loaded files.",
                        "doc": null
                      }
                    }
                  }
                },
                "doc": {
                  "description": "Import a file from the local filesystem.",
                  "doc": null
                }
              },
              {
                "module_type": "create.database",
                "module_config": {
                  "source_type": "file",
                  "target_type": "database"
                },
                "is_resolved": false,
                "step_id": "create_database_from_file",
                "manifest_src": {
                  "module_type": "create.database.from.file",
                  "module_config": {},
                  "is_resolved": false
                },
                "input_links": {
                  "file": [
                    {
                      "step_id": "import_file",
                      "value_name": "file",
                      "sub_value": null
                    }
                  ]
                },
                "module_details": {
                  "python_class_name": "CreateDatabaseModule",
                  "python_module_name": "kiara_plugin.tabular.modules.db",
                  "full_name": "kiara_plugin.tabular.modules.db.CreateDatabaseModule",
                  "module_config": {
                    "constants": {},
                    "defaults": {},
                    "source_type": "file",
                    "target_type": "database",
                    "ignore_errors": false,
                    "merge_into_single_table": false,
                    "include_source_metadata": null,
                    "include_source_file_content": false
                  },
                  "inputs_schema": {
                    "file": {
                      "type": "file",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "The source value (of type 'file').",
                        "doc": null
                      }
                    },
                    "first_row_is_header": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": true,
                      "is_constant": false,
                      "doc": {
                        "description": "Whether the first row of the file is a header row. If not provided, kiara will try to auto-determine.",
                        "doc": null
                      }
                    }
                  },
                  "outputs_schema": {
                    "database": {
                      "type": "database",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "The result value (of type 'database').",
                        "doc": null
                      }
                    }
                  }
                },
                "doc": {
                  "description": "Creates a 'database' instance from a source value of type 'file'.",
                  "doc": null
                }
              }
            ],
            "input_aliases": {
              "import_file.path": "path"
            },
            "output_aliases": {
              "import_file.file": "imported_file",
              "create_database_from_file.database": "database"
            },
            "doc": {
              "description": "Import a database from a csv file.",
              "doc": null
            },
            "context": {}
          },
          "is_resolved": false,
          "operation_id": "import.database.from.local_file_path",
          "operation_details": {
            "operation_id": "import.database.from.local_file_path",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Import a database from a csv file.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "PipelineModule",
            "python_module_name": "kiara.modules.included_core_modules.pipeline",
            "full_name": "kiara.modules.included_core_modules.pipeline.PipelineModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "pipeline_name": "import.database.from.local_file_path",
              "steps": [
                {
                  "module_type": "import.local.file",
                  "module_config": {},
                  "is_resolved": false,
                  "step_id": "import_file",
                  "manifest_src": {
                    "module_type": "import.local.file",
                    "module_config": {},
                    "is_resolved": false
                  },
                  "input_links": {},
                  "module_details": {
                    "python_class_name": "ImportLocalFileModule",
                    "python_module_name": "kiara.modules.included_core_modules.filesystem",
                    "full_name": "kiara.modules.included_core_modules.filesystem.ImportLocalFileModule",
                    "module_config": {
                      "constants": {},
                      "defaults": {}
                    },
                    "inputs_schema": {
                      "path": {
                        "type": "string",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "The local path to the file (absolute, or relative to current directory.",
                          "doc": null
                        }
                      }
                    },
                    "outputs_schema": {
                      "file": {
                        "type": "file",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "The loaded files.",
                          "doc": null
                        }
                      }
                    }
                  },
                  "doc": {
                    "description": "Import a file from the local filesystem.",
                    "doc": null
                  }
                },
                {
                  "module_type": "create.database",
                  "module_config": {
                    "source_type": "file",
                    "target_type": "database"
                  },
                  "is_resolved": false,
                  "step_id": "create_database_from_file",
                  "manifest_src": {
                    "module_type": "create.database.from.file",
                    "module_config": {},
                    "is_resolved": false
                  },
                  "input_links": {
                    "file": [
                      {
                        "step_id": "import_file",
                        "value_name": "file",
                        "sub_value": null
                      }
                    ]
                  },
                  "module_details": {
                    "python_class_name": "CreateDatabaseModule",
                    "python_module_name": "kiara_plugin.tabular.modules.db",
                    "full_name": "kiara_plugin.tabular.modules.db.CreateDatabaseModule",
                    "module_config": {
                      "constants": {},
                      "defaults": {},
                      "source_type": "file",
                      "target_type": "database",
                      "ignore_errors": false,
                      "merge_into_single_table": false,
                      "include_source_metadata": null,
                      "include_source_file_content": false
                    },
                    "inputs_schema": {
                      "file": {
                        "type": "file",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "The source value (of type 'file').",
                          "doc": null
                        }
                      },
                      "first_row_is_header": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": true,
                        "is_constant": false,
                        "doc": {
                          "description": "Whether the first row of the file is a header row. If not provided, kiara will try to auto-determine.",
                          "doc": null
                        }
                      }
                    },
                    "outputs_schema": {
                      "database": {
                        "type": "database",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "The result value (of type 'database').",
                          "doc": null
                        }
                      }
                    }
                  },
                  "doc": {
                    "description": "Creates a 'database' instance from a source value of type 'file'.",
                    "doc": null
                  }
                }
              ],
              "input_aliases": {
                "import_file.path": "path"
              },
              "output_aliases": {
                "import_file.file": "imported_file",
                "create_database_from_file.database": "database"
              },
              "doc": {
                "description": "Import a database from a csv file.",
                "doc": null
              },
              "context": {}
            },
            "inputs_schema": {
              "path": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The local path to the file (absolute, or relative to current directory.",
                  "doc": null
                }
              },
              "create_database_from_file__first_row_is_header": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "Whether the first row of the file is a header row. If not provided, kiara will try to auto-determine.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "imported_file": {
                "type": "file",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The loaded files.",
                  "doc": null
                }
              },
              "database": {
                "type": "database",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The result value (of type 'database').",
                  "doc": null
                }
              }
            }
          },
          "metadata": {
            "authors": [
              {
                "name": "Markus Binsteiner",
                "email": "markus@frkl.io"
              }
            ],
            "description": "Kiara modules for: tabular",
            "references": {
              "source_repo": {
                "desc": "The module package git repository.",
                "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular"
              },
              "documentation": {
                "desc": "The url for the module package documentation.",
                "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/"
              }
            },
            "tags": ["tabular"],
            "labels": {
              "package": "kiara_plugin.tabular"
            }
          }
        },
        "operation_types": ["pipeline"],
        "input_fields": {
          "path": {
            "field_name": "path",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The local path to the file (absolute, or relative to current directory.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": true
          },
          "create_database_from_file__first_row_is_header": {
            "field_name": "create_database_from_file__first_row_is_header",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "Whether the first row of the file is a header row. If not provided, kiara will try to auto-determine.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "imported_file": {
            "field_name": "imported_file",
            "field_schema": {
              "type": "file",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The loaded files.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "file",
              "data_type_config": {
                "content_type": null
              },
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "FileValueType",
                "python_module_name": "kiara.data_types.included_core_types.filesystem",
                "full_name": "kiara.data_types.included_core_types.filesystem.FileValueType"
              }
            },
            "value_required": true
          },
          "database": {
            "field_name": "database",
            "field_schema": {
              "type": "database",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The result value (of type 'database').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "database",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "DatabaseType",
                "python_module_name": "kiara_plugin.tabular.data_types.db",
                "full_name": "kiara_plugin.tabular.data_types.db.DatabaseType"
              }
            },
            "value_required": true
          }
        }
      },
      "import.table.from.local_file_path": {
        "type_name": "import.table.from.local_file_path",
        "documentation": {
          "description": "Import a table from a file on the local filesystem.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara",
              "desc": "The kiara project git repository."
            },
            "documentation": {
              "url": "https://dharpa.org/kiara_documentation/",
              "desc": "The url for kiara documentation."
            }
          },
          "tags": [],
          "labels": {
            "package": "kiara"
          }
        },
        "operation": {
          "module_type": "pipeline",
          "module_config": {
            "constants": {},
            "defaults": {},
            "pipeline_name": "import.table.from.local_file_path",
            "steps": [
              {
                "module_type": "import.local.file",
                "module_config": {},
                "is_resolved": false,
                "step_id": "import_file",
                "manifest_src": {
                  "module_type": "import.local.file",
                  "module_config": {},
                  "is_resolved": false
                },
                "input_links": {},
                "module_details": {
                  "python_class_name": "ImportLocalFileModule",
                  "python_module_name": "kiara.modules.included_core_modules.filesystem",
                  "full_name": "kiara.modules.included_core_modules.filesystem.ImportLocalFileModule",
                  "module_config": {
                    "constants": {},
                    "defaults": {}
                  },
                  "inputs_schema": {
                    "path": {
                      "type": "string",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "The local path to the file (absolute, or relative to current directory.",
                        "doc": null
                      }
                    }
                  },
                  "outputs_schema": {
                    "file": {
                      "type": "file",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "The loaded files.",
                        "doc": null
                      }
                    }
                  }
                },
                "doc": {
                  "description": "Import a file from the local filesystem.",
                  "doc": null
                }
              },
              {
                "module_type": "create.table",
                "module_config": {
                  "source_type": "file",
                  "target_type": "table"
                },
                "is_resolved": false,
                "step_id": "create_table_from_file",
                "manifest_src": {
                  "module_type": "create.table.from.file",
                  "module_config": {},
                  "is_resolved": false
                },
                "input_links": {
                  "file": [
                    {
                      "step_id": "import_file",
                      "value_name": "file",
                      "sub_value": null
                    }
                  ]
                },
                "module_details": {
                  "python_class_name": "CreateTableModule",
                  "python_module_name": "kiara_plugin.tabular.modules.table",
                  "full_name": "kiara_plugin.tabular.modules.table.CreateTableModule",
                  "module_config": {
                    "constants": {},
                    "defaults": {},
                    "source_type": "file",
                    "target_type": "table",
                    "ignore_errors": false
                  },
                  "inputs_schema": {
                    "file": {
                      "type": "file",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "The source value (of type 'file').",
                        "doc": null
                      }
                    },
                    "first_row_is_header": {
                      "type": "boolean",
                      "type_config": {},
                      "default": null,
                      "optional": true,
                      "is_constant": false,
                      "doc": {
                        "description": "Whether the first row of a (csv) file is a header row. If not provided, kiara will try to auto-determine. Ignored if not a csv file.",
                        "doc": null
                      }
                    }
                  },
                  "outputs_schema": {
                    "table": {
                      "type": "table",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "The result value (of type 'table').",
                        "doc": null
                      }
                    }
                  }
                },
                "doc": {
                  "description": "Creates a 'table' instance from a source value of type 'file'.",
                  "doc": null
                }
              }
            ],
            "input_aliases": {
              "import_file.path": "path",
              "create_table_from_file.first_row_is_header": "first_row_is_header"
            },
            "output_aliases": {
              "import_file.file": "imported_file",
              "create_table_from_file.table": "table"
            },
            "doc": {
              "description": "Import a table from a file on the local filesystem.",
              "doc": null
            },
            "context": {}
          },
          "is_resolved": false,
          "operation_id": "import.table.from.local_file_path",
          "operation_details": {
            "operation_id": "import.table.from.local_file_path",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Import a table from a file on the local filesystem.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "PipelineModule",
            "python_module_name": "kiara.modules.included_core_modules.pipeline",
            "full_name": "kiara.modules.included_core_modules.pipeline.PipelineModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "pipeline_name": "import.table.from.local_file_path",
              "steps": [
                {
                  "module_type": "import.local.file",
                  "module_config": {},
                  "is_resolved": false,
                  "step_id": "import_file",
                  "manifest_src": {
                    "module_type": "import.local.file",
                    "module_config": {},
                    "is_resolved": false
                  },
                  "input_links": {},
                  "module_details": {
                    "python_class_name": "ImportLocalFileModule",
                    "python_module_name": "kiara.modules.included_core_modules.filesystem",
                    "full_name": "kiara.modules.included_core_modules.filesystem.ImportLocalFileModule",
                    "module_config": {
                      "constants": {},
                      "defaults": {}
                    },
                    "inputs_schema": {
                      "path": {
                        "type": "string",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "The local path to the file (absolute, or relative to current directory.",
                          "doc": null
                        }
                      }
                    },
                    "outputs_schema": {
                      "file": {
                        "type": "file",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "The loaded files.",
                          "doc": null
                        }
                      }
                    }
                  },
                  "doc": {
                    "description": "Import a file from the local filesystem.",
                    "doc": null
                  }
                },
                {
                  "module_type": "create.table",
                  "module_config": {
                    "source_type": "file",
                    "target_type": "table"
                  },
                  "is_resolved": false,
                  "step_id": "create_table_from_file",
                  "manifest_src": {
                    "module_type": "create.table.from.file",
                    "module_config": {},
                    "is_resolved": false
                  },
                  "input_links": {
                    "file": [
                      {
                        "step_id": "import_file",
                        "value_name": "file",
                        "sub_value": null
                      }
                    ]
                  },
                  "module_details": {
                    "python_class_name": "CreateTableModule",
                    "python_module_name": "kiara_plugin.tabular.modules.table",
                    "full_name": "kiara_plugin.tabular.modules.table.CreateTableModule",
                    "module_config": {
                      "constants": {},
                      "defaults": {},
                      "source_type": "file",
                      "target_type": "table",
                      "ignore_errors": false
                    },
                    "inputs_schema": {
                      "file": {
                        "type": "file",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "The source value (of type 'file').",
                          "doc": null
                        }
                      },
                      "first_row_is_header": {
                        "type": "boolean",
                        "type_config": {},
                        "default": null,
                        "optional": true,
                        "is_constant": false,
                        "doc": {
                          "description": "Whether the first row of a (csv) file is a header row. If not provided, kiara will try to auto-determine. Ignored if not a csv file.",
                          "doc": null
                        }
                      }
                    },
                    "outputs_schema": {
                      "table": {
                        "type": "table",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "The result value (of type 'table').",
                          "doc": null
                        }
                      }
                    }
                  },
                  "doc": {
                    "description": "Creates a 'table' instance from a source value of type 'file'.",
                    "doc": null
                  }
                }
              ],
              "input_aliases": {
                "import_file.path": "path",
                "create_table_from_file.first_row_is_header": "first_row_is_header"
              },
              "output_aliases": {
                "import_file.file": "imported_file",
                "create_table_from_file.table": "table"
              },
              "doc": {
                "description": "Import a table from a file on the local filesystem.",
                "doc": null
              },
              "context": {}
            },
            "inputs_schema": {
              "path": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The local path to the file (absolute, or relative to current directory.",
                  "doc": null
                }
              },
              "first_row_is_header": {
                "type": "boolean",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "Whether the first row of a (csv) file is a header row. If not provided, kiara will try to auto-determine. Ignored if not a csv file.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "imported_file": {
                "type": "file",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The loaded files.",
                  "doc": null
                }
              },
              "table": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The result value (of type 'table').",
                  "doc": null
                }
              }
            }
          },
          "metadata": {
            "authors": [
              {
                "name": "Markus Binsteiner",
                "email": "markus@frkl.io"
              }
            ],
            "description": "Kiara modules for: tabular",
            "references": {
              "source_repo": {
                "desc": "The module package git repository.",
                "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular"
              },
              "documentation": {
                "desc": "The url for the module package documentation.",
                "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/"
              }
            },
            "tags": ["tabular"],
            "labels": {
              "package": "kiara_plugin.tabular"
            }
          }
        },
        "operation_types": ["pipeline"],
        "input_fields": {
          "path": {
            "field_name": "path",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The local path to the file (absolute, or relative to current directory.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": true
          },
          "first_row_is_header": {
            "field_name": "first_row_is_header",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "Whether the first row of a (csv) file is a header row. If not provided, kiara will try to auto-determine. Ignored if not a csv file.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "imported_file": {
            "field_name": "imported_file",
            "field_schema": {
              "type": "file",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The loaded files.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "file",
              "data_type_config": {
                "content_type": null
              },
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "FileValueType",
                "python_module_name": "kiara.data_types.included_core_types.filesystem",
                "full_name": "kiara.data_types.included_core_types.filesystem.FileValueType"
              }
            },
            "value_required": true
          },
          "table": {
            "field_name": "table",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The result value (of type 'table').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          }
        }
      },
      "import.table.from.local_folder_path": {
        "type_name": "import.table.from.local_folder_path",
        "documentation": {
          "description": "Import a table from a local folder containing text files.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara",
              "desc": "The kiara project git repository."
            },
            "documentation": {
              "url": "https://dharpa.org/kiara_documentation/",
              "desc": "The url for kiara documentation."
            }
          },
          "tags": [],
          "labels": {
            "package": "kiara"
          }
        },
        "operation": {
          "module_type": "pipeline",
          "module_config": {
            "constants": {},
            "defaults": {},
            "pipeline_name": "import.table.from.local_folder_path",
            "steps": [
              {
                "module_type": "import.local.file_bundle",
                "module_config": {},
                "is_resolved": false,
                "step_id": "import_file_bundle",
                "manifest_src": {
                  "module_type": "import.local.file_bundle",
                  "module_config": {},
                  "is_resolved": false
                },
                "input_links": {},
                "module_details": {
                  "python_class_name": "ImportLocalFileBundleModule",
                  "python_module_name": "kiara.modules.included_core_modules.filesystem",
                  "full_name": "kiara.modules.included_core_modules.filesystem.ImportLocalFileBundleModule",
                  "module_config": {
                    "constants": {},
                    "defaults": {},
                    "include_file_types": null,
                    "exclude_file_types": null
                  },
                  "inputs_schema": {
                    "path": {
                      "type": "string",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "The local path of the folder to import.",
                        "doc": null
                      }
                    }
                  },
                  "outputs_schema": {
                    "file_bundle": {
                      "type": "file_bundle",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "The imported file bundle.",
                        "doc": null
                      }
                    }
                  }
                },
                "doc": {
                  "description": "Import a folder (file_bundle) from the local filesystem.",
                  "doc": null
                }
              },
              {
                "module_type": "create.table",
                "module_config": {
                  "source_type": "file_bundle",
                  "target_type": "table"
                },
                "is_resolved": false,
                "step_id": "create_table_from_files",
                "manifest_src": {
                  "module_type": "create.table.from.file_bundle",
                  "module_config": {},
                  "is_resolved": false
                },
                "input_links": {
                  "file_bundle": [
                    {
                      "step_id": "import_file_bundle",
                      "value_name": "file_bundle",
                      "sub_value": null
                    }
                  ]
                },
                "module_details": {
                  "python_class_name": "CreateTableModule",
                  "python_module_name": "kiara_plugin.tabular.modules.table",
                  "full_name": "kiara_plugin.tabular.modules.table.CreateTableModule",
                  "module_config": {
                    "constants": {},
                    "defaults": {},
                    "source_type": "file_bundle",
                    "target_type": "table",
                    "ignore_errors": false
                  },
                  "inputs_schema": {
                    "file_bundle": {
                      "type": "file_bundle",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "The source value (of type 'file_bundle').",
                        "doc": null
                      }
                    }
                  },
                  "outputs_schema": {
                    "table": {
                      "type": "table",
                      "type_config": {},
                      "default": null,
                      "optional": false,
                      "is_constant": false,
                      "doc": {
                        "description": "The result value (of type 'table').",
                        "doc": null
                      }
                    }
                  }
                },
                "doc": {
                  "description": "Creates a 'table' instance from a source value of type 'file_bundle'.",
                  "doc": null
                }
              }
            ],
            "input_aliases": {
              "import_file_bundle.path": "path"
            },
            "output_aliases": {
              "import_file_bundle.file_bundle": "imported_file_bundle",
              "create_table_from_files.table": "table"
            },
            "doc": {
              "description": "Import a table from a local folder containing text files.",
              "doc": null
            },
            "context": {}
          },
          "is_resolved": false,
          "operation_id": "import.table.from.local_folder_path",
          "operation_details": {
            "operation_id": "import.table.from.local_folder_path",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Import a table from a local folder containing text files.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "PipelineModule",
            "python_module_name": "kiara.modules.included_core_modules.pipeline",
            "full_name": "kiara.modules.included_core_modules.pipeline.PipelineModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "pipeline_name": "import.table.from.local_folder_path",
              "steps": [
                {
                  "module_type": "import.local.file_bundle",
                  "module_config": {},
                  "is_resolved": false,
                  "step_id": "import_file_bundle",
                  "manifest_src": {
                    "module_type": "import.local.file_bundle",
                    "module_config": {},
                    "is_resolved": false
                  },
                  "input_links": {},
                  "module_details": {
                    "python_class_name": "ImportLocalFileBundleModule",
                    "python_module_name": "kiara.modules.included_core_modules.filesystem",
                    "full_name": "kiara.modules.included_core_modules.filesystem.ImportLocalFileBundleModule",
                    "module_config": {
                      "constants": {},
                      "defaults": {},
                      "include_file_types": null,
                      "exclude_file_types": null
                    },
                    "inputs_schema": {
                      "path": {
                        "type": "string",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "The local path of the folder to import.",
                          "doc": null
                        }
                      }
                    },
                    "outputs_schema": {
                      "file_bundle": {
                        "type": "file_bundle",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "The imported file bundle.",
                          "doc": null
                        }
                      }
                    }
                  },
                  "doc": {
                    "description": "Import a folder (file_bundle) from the local filesystem.",
                    "doc": null
                  }
                },
                {
                  "module_type": "create.table",
                  "module_config": {
                    "source_type": "file_bundle",
                    "target_type": "table"
                  },
                  "is_resolved": false,
                  "step_id": "create_table_from_files",
                  "manifest_src": {
                    "module_type": "create.table.from.file_bundle",
                    "module_config": {},
                    "is_resolved": false
                  },
                  "input_links": {
                    "file_bundle": [
                      {
                        "step_id": "import_file_bundle",
                        "value_name": "file_bundle",
                        "sub_value": null
                      }
                    ]
                  },
                  "module_details": {
                    "python_class_name": "CreateTableModule",
                    "python_module_name": "kiara_plugin.tabular.modules.table",
                    "full_name": "kiara_plugin.tabular.modules.table.CreateTableModule",
                    "module_config": {
                      "constants": {},
                      "defaults": {},
                      "source_type": "file_bundle",
                      "target_type": "table",
                      "ignore_errors": false
                    },
                    "inputs_schema": {
                      "file_bundle": {
                        "type": "file_bundle",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "The source value (of type 'file_bundle').",
                          "doc": null
                        }
                      }
                    },
                    "outputs_schema": {
                      "table": {
                        "type": "table",
                        "type_config": {},
                        "default": null,
                        "optional": false,
                        "is_constant": false,
                        "doc": {
                          "description": "The result value (of type 'table').",
                          "doc": null
                        }
                      }
                    }
                  },
                  "doc": {
                    "description": "Creates a 'table' instance from a source value of type 'file_bundle'.",
                    "doc": null
                  }
                }
              ],
              "input_aliases": {
                "import_file_bundle.path": "path"
              },
              "output_aliases": {
                "import_file_bundle.file_bundle": "imported_file_bundle",
                "create_table_from_files.table": "table"
              },
              "doc": {
                "description": "Import a table from a local folder containing text files.",
                "doc": null
              },
              "context": {}
            },
            "inputs_schema": {
              "path": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The local path of the folder to import.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "imported_file_bundle": {
                "type": "file_bundle",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The imported file bundle.",
                  "doc": null
                }
              },
              "table": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The result value (of type 'table').",
                  "doc": null
                }
              }
            }
          },
          "metadata": {
            "authors": [
              {
                "name": "Markus Binsteiner",
                "email": "markus@frkl.io"
              }
            ],
            "description": "Kiara modules for: tabular",
            "references": {
              "source_repo": {
                "desc": "The module package git repository.",
                "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular"
              },
              "documentation": {
                "desc": "The url for the module package documentation.",
                "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/"
              }
            },
            "tags": ["tabular"],
            "labels": {
              "package": "kiara_plugin.tabular"
            }
          }
        },
        "operation_types": ["pipeline"],
        "input_fields": {
          "path": {
            "field_name": "path",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The local path of the folder to import.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": true
          }
        },
        "output_fields": {
          "imported_file_bundle": {
            "field_name": "imported_file_bundle",
            "field_schema": {
              "type": "file_bundle",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The imported file bundle.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "file_bundle",
              "data_type_config": {
                "content_type": null
              },
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "FileBundleValueType",
                "python_module_name": "kiara.data_types.included_core_types.filesystem",
                "full_name": "kiara.data_types.included_core_types.filesystem.FileBundleValueType"
              }
            },
            "value_required": true
          },
          "table": {
            "field_name": "table",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The result value (of type 'table').",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          }
        }
      },
      "parse.date_array": {
        "type_name": "parse.date_array",
        "documentation": {
          "description": "Create an array of date objects from an array of strings.",
          "doc": "This module is very simplistic at the moment, more functionality and options will be added in the future.\n\nAt its core, this module uses the standard parser from the\n[dateutil](https://github.com/dateutil/dateutil) package to parse strings into dates. As this parser can't handle\n complex strings, the input strings can be pre-processed in the following ways:\n\n- 'cut' non-relevant parts of the string (using 'min_index' & 'max_index' input/config options)\n- remove matching tokens from the string, and replace them with a single whitespace (using the 'remove_tokens' option)\n\nBy default, if an input string can't be parsed this module will raise an exception. This can be prevented by\nsetting this modules 'force_non_null' config option or input to 'False', in which case un-parsable strings\nwill appear as 'NULL' value in the resulting array."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "parse.date_array",
          "module_config": {},
          "is_resolved": false,
          "operation_id": "parse.date_array",
          "operation_details": {
            "operation_id": "parse.date_array",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Create an array of date objects from an array of strings.",
            "doc": "This module is very simplistic at the moment, more functionality and options will be added in the future.\n\nAt its core, this module uses the standard parser from the\n[dateutil](https://github.com/dateutil/dateutil) package to parse strings into dates. As this parser can't handle\n complex strings, the input strings can be pre-processed in the following ways:\n\n- 'cut' non-relevant parts of the string (using 'min_index' & 'max_index' input/config options)\n- remove matching tokens from the string, and replace them with a single whitespace (using the 'remove_tokens' option)\n\nBy default, if an input string can't be parsed this module will raise an exception. This can be prevented by\nsetting this modules 'force_non_null' config option or input to 'False', in which case un-parsable strings\nwill appear as 'NULL' value in the resulting array."
          },
          "module_details": {
            "python_class_name": "ExtractDateModule",
            "python_module_name": "kiara_plugin.tabular.modules.array",
            "full_name": "kiara_plugin.tabular.modules.array.ExtractDateModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "add_inputs": true,
              "input_fields": [],
              "force_non_null": true,
              "min_index": null,
              "max_index": null,
              "remove_tokens": []
            },
            "inputs_schema": {
              "array": {
                "type": "array",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The input array.",
                  "doc": null
                }
              },
              "force_non_null": {
                "type": "boolean",
                "type_config": {},
                "default": true,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "If set to 'True', raise an error if any of the strings in the array can't be parsed.",
                  "doc": null
                }
              },
              "min_index": {
                "type": "integer",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The minimum index from where to start parsing the string(s).",
                  "doc": null
                }
              },
              "max_index": {
                "type": "integer",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The maximum index until whic to parse the string(s).",
                  "doc": null
                }
              },
              "remove_tokens": {
                "type": "list",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "A list of tokens/characters to replace with a single white-space before parsing the input.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "date_array": {
                "type": "array",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The resulting array with items of a date data type.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["custom_module"],
        "input_fields": {
          "array": {
            "field_name": "array",
            "field_schema": {
              "type": "array",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The input array.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "array",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "ArrayType",
                "python_module_name": "kiara_plugin.tabular.data_types.array",
                "full_name": "kiara_plugin.tabular.data_types.array.ArrayType"
              }
            },
            "value_required": true
          },
          "force_non_null": {
            "field_name": "force_non_null",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": true,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "If set to 'True', raise an error if any of the strings in the array can't be parsed.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": false
          },
          "min_index": {
            "field_name": "min_index",
            "field_schema": {
              "type": "integer",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The minimum index from where to start parsing the string(s).",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "integer",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "IntegerType",
                "python_module_name": "kiara_plugin.core_types.data_types",
                "full_name": "kiara_plugin.core_types.data_types.IntegerType"
              }
            },
            "value_required": false
          },
          "max_index": {
            "field_name": "max_index",
            "field_schema": {
              "type": "integer",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The maximum index until whic to parse the string(s).",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "integer",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "IntegerType",
                "python_module_name": "kiara_plugin.core_types.data_types",
                "full_name": "kiara_plugin.core_types.data_types.IntegerType"
              }
            },
            "value_required": false
          },
          "remove_tokens": {
            "field_name": "remove_tokens",
            "field_schema": {
              "type": "list",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "A list of tokens/characters to replace with a single white-space before parsing the input.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "list",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "ListValueType",
                "python_module_name": "kiara_plugin.core_types.data_types",
                "full_name": "kiara_plugin.core_types.data_types.ListValueType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "date_array": {
            "field_name": "date_array",
            "field_schema": {
              "type": "array",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The resulting array with items of a date data type.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "array",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "ArrayType",
                "python_module_name": "kiara_plugin.tabular.data_types.array",
                "full_name": "kiara_plugin.tabular.data_types.array.ArrayType"
              }
            },
            "value_required": true
          }
        }
      },
      "query.database": {
        "type_name": "query.database",
        "documentation": {
          "description": "Execute a sql query against a (sqlite) database.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "query.database",
          "module_config": {},
          "is_resolved": false,
          "operation_id": "query.database",
          "operation_details": {
            "operation_id": "query.database",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Execute a sql query against a (sqlite) database.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "QueryDatabaseModule",
            "python_module_name": "kiara_plugin.tabular.modules.db",
            "full_name": "kiara_plugin.tabular.modules.db.QueryDatabaseModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "query": null
            },
            "inputs_schema": {
              "database": {
                "type": "database",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The database to query.",
                  "doc": null
                }
              },
              "query": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The query to execute.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "query_result": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The query result.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["custom_module"],
        "input_fields": {
          "database": {
            "field_name": "database",
            "field_schema": {
              "type": "database",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The database to query.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "database",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "DatabaseType",
                "python_module_name": "kiara_plugin.tabular.data_types.db",
                "full_name": "kiara_plugin.tabular.data_types.db.DatabaseType"
              }
            },
            "value_required": true
          },
          "query": {
            "field_name": "query",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The query to execute.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": true
          }
        },
        "output_fields": {
          "query_result": {
            "field_name": "query_result",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The query result.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          }
        }
      },
      "query.table": {
        "type_name": "query.table",
        "documentation": {
          "description": "Execute a sql query against an (Arrow) table.",
          "doc": "The default relation name for the sql query is 'data', but can be modified by the 'relation_name' config option/input.\n\nIf the 'query' module config option is not set, users can provide their own query, otherwise the pre-set\none will be used."
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "query.table",
          "module_config": {},
          "is_resolved": false,
          "operation_id": "query.table",
          "operation_details": {
            "operation_id": "query.table",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Execute a sql query against an (Arrow) table.",
            "doc": "The default relation name for the sql query is 'data', but can be modified by the 'relation_name' config option/input.\n\nIf the 'query' module config option is not set, users can provide their own query, otherwise the pre-set\none will be used."
          },
          "module_details": {
            "python_class_name": "QueryTableSQL",
            "python_module_name": "kiara_plugin.tabular.modules.table",
            "full_name": "kiara_plugin.tabular.modules.table.QueryTableSQL",
            "module_config": {
              "constants": {},
              "defaults": {},
              "query": null,
              "relation_name": "data"
            },
            "inputs_schema": {
              "table": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The table to query",
                  "doc": null
                }
              },
              "query": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The query, use the value of the 'relation_name' input as table, e.g. 'select * from data'.",
                  "doc": null
                }
              },
              "relation_name": {
                "type": "string",
                "type_config": {},
                "default": "data",
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The name the table is referred to in the sql query.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "query_result": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The query result.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["custom_module"],
        "input_fields": {
          "table": {
            "field_name": "table",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The table to query",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          },
          "query": {
            "field_name": "query",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The query, use the value of the 'relation_name' input as table, e.g. 'select * from data'.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": true
          },
          "relation_name": {
            "field_name": "relation_name",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": "data",
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The name the table is referred to in the sql query.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "query_result": {
            "field_name": "query_result",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The query result.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          }
        }
      },
      "render.database.as.string": {
        "type_name": "render.database.as.string",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "render.database",
          "module_config": {
            "source_type": "database",
            "target_type": "string"
          },
          "is_resolved": false,
          "operation_id": "render.database.as.string",
          "operation_details": {
            "operation_id": "render.database.as.string",
            "is_internal_operation": true
          },
          "doc": {
            "description": "-- n/a --",
            "doc": null
          },
          "module_details": {
            "python_class_name": "RenderDatabaseModule",
            "python_module_name": "kiara_plugin.tabular.modules.db",
            "full_name": "kiara_plugin.tabular.modules.db.RenderDatabaseModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "source_type": "database",
              "target_type": "string"
            },
            "inputs_schema": {
              "value": {
                "type": "database",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A value of type 'database'",
                  "doc": null
                }
              },
              "render_config": {
                "type": "dict",
                "type_config": {},
                "default": {},
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Instructions/config on how (or what) to render the provided value.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "render_value_result": {
                "type": "render_value_result",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The rendered value, incl. some metadata.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["render_value"],
        "input_fields": {
          "value": {
            "field_name": "value",
            "field_schema": {
              "type": "database",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A value of type 'database'",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "database",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "DatabaseType",
                "python_module_name": "kiara_plugin.tabular.data_types.db",
                "full_name": "kiara_plugin.tabular.data_types.db.DatabaseType"
              }
            },
            "value_required": true
          },
          "render_config": {
            "field_name": "render_config",
            "field_schema": {
              "type": "dict",
              "type_config": {},
              "default": {},
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Instructions/config on how (or what) to render the provided value.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "dict",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "DictValueType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.DictValueType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "render_value_result": {
            "field_name": "render_value_result",
            "field_schema": {
              "type": "render_value_result",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The rendered value, incl. some metadata.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "render_value_result",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "RenderValueResultDataType",
                "python_module_name": "kiara.data_types.included_core_types.internal.render_value",
                "full_name": "kiara.data_types.included_core_types.internal.render_value.RenderValueResultDataType"
              }
            },
            "value_required": true
          }
        }
      },
      "render.database.as.terminal_renderable": {
        "type_name": "render.database.as.terminal_renderable",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "render.database",
          "module_config": {
            "source_type": "database",
            "target_type": "terminal_renderable"
          },
          "is_resolved": false,
          "operation_id": "render.database.as.terminal_renderable",
          "operation_details": {
            "operation_id": "render.database.as.terminal_renderable",
            "is_internal_operation": true
          },
          "doc": {
            "description": "-- n/a --",
            "doc": null
          },
          "module_details": {
            "python_class_name": "RenderDatabaseModule",
            "python_module_name": "kiara_plugin.tabular.modules.db",
            "full_name": "kiara_plugin.tabular.modules.db.RenderDatabaseModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "source_type": "database",
              "target_type": "terminal_renderable"
            },
            "inputs_schema": {
              "value": {
                "type": "database",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A value of type 'database'",
                  "doc": null
                }
              },
              "render_config": {
                "type": "dict",
                "type_config": {},
                "default": {},
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Instructions/config on how (or what) to render the provided value.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "render_value_result": {
                "type": "render_value_result",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The rendered value, incl. some metadata.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["render_value"],
        "input_fields": {
          "value": {
            "field_name": "value",
            "field_schema": {
              "type": "database",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A value of type 'database'",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "database",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "DatabaseType",
                "python_module_name": "kiara_plugin.tabular.data_types.db",
                "full_name": "kiara_plugin.tabular.data_types.db.DatabaseType"
              }
            },
            "value_required": true
          },
          "render_config": {
            "field_name": "render_config",
            "field_schema": {
              "type": "dict",
              "type_config": {},
              "default": {},
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Instructions/config on how (or what) to render the provided value.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "dict",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "DictValueType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.DictValueType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "render_value_result": {
            "field_name": "render_value_result",
            "field_schema": {
              "type": "render_value_result",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The rendered value, incl. some metadata.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "render_value_result",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "RenderValueResultDataType",
                "python_module_name": "kiara.data_types.included_core_types.internal.render_value",
                "full_name": "kiara.data_types.included_core_types.internal.render_value.RenderValueResultDataType"
              }
            },
            "value_required": true
          }
        }
      },
      "render.table.as.string": {
        "type_name": "render.table.as.string",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "render.table",
          "module_config": {
            "source_type": "table",
            "target_type": "string"
          },
          "is_resolved": false,
          "operation_id": "render.table.as.string",
          "operation_details": {
            "operation_id": "render.table.as.string",
            "is_internal_operation": true
          },
          "doc": {
            "description": "-- n/a --",
            "doc": null
          },
          "module_details": {
            "python_class_name": "RenderTableModule",
            "python_module_name": "kiara_plugin.tabular.modules.table",
            "full_name": "kiara_plugin.tabular.modules.table.RenderTableModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "source_type": "table",
              "target_type": "string"
            },
            "inputs_schema": {
              "value": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A value of type 'table'",
                  "doc": null
                }
              },
              "render_config": {
                "type": "dict",
                "type_config": {},
                "default": {},
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Instructions/config on how (or what) to render the provided value.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "render_value_result": {
                "type": "render_value_result",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The rendered value, incl. some metadata.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["render_value"],
        "input_fields": {
          "value": {
            "field_name": "value",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A value of type 'table'",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          },
          "render_config": {
            "field_name": "render_config",
            "field_schema": {
              "type": "dict",
              "type_config": {},
              "default": {},
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Instructions/config on how (or what) to render the provided value.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "dict",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "DictValueType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.DictValueType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "render_value_result": {
            "field_name": "render_value_result",
            "field_schema": {
              "type": "render_value_result",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The rendered value, incl. some metadata.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "render_value_result",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "RenderValueResultDataType",
                "python_module_name": "kiara.data_types.included_core_types.internal.render_value",
                "full_name": "kiara.data_types.included_core_types.internal.render_value.RenderValueResultDataType"
              }
            },
            "value_required": true
          }
        }
      },
      "render.table.as.terminal_renderable": {
        "type_name": "render.table.as.terminal_renderable",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "render.table",
          "module_config": {
            "source_type": "table",
            "target_type": "terminal_renderable"
          },
          "is_resolved": false,
          "operation_id": "render.table.as.terminal_renderable",
          "operation_details": {
            "operation_id": "render.table.as.terminal_renderable",
            "is_internal_operation": true
          },
          "doc": {
            "description": "-- n/a --",
            "doc": null
          },
          "module_details": {
            "python_class_name": "RenderTableModule",
            "python_module_name": "kiara_plugin.tabular.modules.table",
            "full_name": "kiara_plugin.tabular.modules.table.RenderTableModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "source_type": "table",
              "target_type": "terminal_renderable"
            },
            "inputs_schema": {
              "value": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A value of type 'table'",
                  "doc": null
                }
              },
              "render_config": {
                "type": "dict",
                "type_config": {},
                "default": {},
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "Instructions/config on how (or what) to render the provided value.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "render_value_result": {
                "type": "render_value_result",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The rendered value, incl. some metadata.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["render_value"],
        "input_fields": {
          "value": {
            "field_name": "value",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A value of type 'table'",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          },
          "render_config": {
            "field_name": "render_config",
            "field_schema": {
              "type": "dict",
              "type_config": {},
              "default": {},
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "Instructions/config on how (or what) to render the provided value.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "dict",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "DictValueType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.DictValueType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "render_value_result": {
            "field_name": "render_value_result",
            "field_schema": {
              "type": "render_value_result",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The rendered value, incl. some metadata.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "render_value_result",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "RenderValueResultDataType",
                "python_module_name": "kiara.data_types.included_core_types.internal.render_value",
                "full_name": "kiara.data_types.included_core_types.internal.render_value.RenderValueResultDataType"
              }
            },
            "value_required": true
          }
        }
      },
      "table.pick.column": {
        "type_name": "table.pick.column",
        "documentation": {
          "description": "Pick one column from a table, returning an array.",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "table.pick.column",
          "module_config": {},
          "is_resolved": false,
          "operation_id": "table.pick.column",
          "operation_details": {
            "operation_id": "table.pick.column",
            "is_internal_operation": false
          },
          "doc": {
            "description": "Pick one column from a table, returning an array.",
            "doc": null
          },
          "module_details": {
            "python_class_name": "PickColumnModule",
            "python_module_name": "kiara_plugin.tabular.modules.table",
            "full_name": "kiara_plugin.tabular.modules.table.PickColumnModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "column_name": null
            },
            "inputs_schema": {
              "table": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A table.",
                  "doc": null
                }
              },
              "column_name": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The name of the column to extract.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "array": {
                "type": "array",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The column.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["custom_module"],
        "input_fields": {
          "table": {
            "field_name": "table",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A table.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          },
          "column_name": {
            "field_name": "column_name",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The name of the column to extract.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": true
          }
        },
        "output_fields": {
          "array": {
            "field_name": "array",
            "field_schema": {
              "type": "array",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The column.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "array",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "ArrayType",
                "python_module_name": "kiara_plugin.tabular.data_types.array",
                "full_name": "kiara_plugin.tabular.data_types.array.ArrayType"
              }
            },
            "value_required": true
          }
        }
      },
      "table_filter.drop_columns": {
        "type_name": "table_filter.drop_columns",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "table.filters",
          "module_config": {
            "filter_name": "drop_columns"
          },
          "is_resolved": false,
          "operation_id": "table_filter.drop_columns",
          "operation_details": {
            "operation_id": "table_filter.drop_columns",
            "is_internal_operation": false
          },
          "doc": {
            "description": "-- n/a --",
            "doc": null
          },
          "module_details": {
            "python_class_name": "TableFiltersModule",
            "python_module_name": "kiara_plugin.tabular.modules.table.filters",
            "full_name": "kiara_plugin.tabular.modules.table.filters.TableFiltersModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "filter_name": "drop_columns"
            },
            "inputs_schema": {
              "value": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A value of type 'table'.",
                  "doc": null
                }
              },
              "columns": {
                "type": "list",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The name of the columns to include.",
                  "doc": null
                }
              },
              "ignore_invalid_column_names": {
                "type": "boolean",
                "type_config": {},
                "default": true,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "Whether to ignore invalid column names.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "value": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The filtered value.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["filter"],
        "input_fields": {
          "value": {
            "field_name": "value",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A value of type 'table'.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          },
          "columns": {
            "field_name": "columns",
            "field_schema": {
              "type": "list",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The name of the columns to include.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "list",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "ListValueType",
                "python_module_name": "kiara_plugin.core_types.data_types",
                "full_name": "kiara_plugin.core_types.data_types.ListValueType"
              }
            },
            "value_required": false
          },
          "ignore_invalid_column_names": {
            "field_name": "ignore_invalid_column_names",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": true,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "Whether to ignore invalid column names.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "value": {
            "field_name": "value",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The filtered value.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          }
        }
      },
      "table_filter.select_columns": {
        "type_name": "table_filter.select_columns",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "table.filters",
          "module_config": {
            "filter_name": "select_columns"
          },
          "is_resolved": false,
          "operation_id": "table_filter.select_columns",
          "operation_details": {
            "operation_id": "table_filter.select_columns",
            "is_internal_operation": false
          },
          "doc": {
            "description": "-- n/a --",
            "doc": null
          },
          "module_details": {
            "python_class_name": "TableFiltersModule",
            "python_module_name": "kiara_plugin.tabular.modules.table.filters",
            "full_name": "kiara_plugin.tabular.modules.table.filters.TableFiltersModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "filter_name": "select_columns"
            },
            "inputs_schema": {
              "value": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A value of type 'table'.",
                  "doc": null
                }
              },
              "columns": {
                "type": "list",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The name of the columns to include.",
                  "doc": null
                }
              },
              "ignore_invalid_column_names": {
                "type": "boolean",
                "type_config": {},
                "default": true,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "Whether to ignore invalid column names.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "value": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The filtered value.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["filter"],
        "input_fields": {
          "value": {
            "field_name": "value",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A value of type 'table'.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          },
          "columns": {
            "field_name": "columns",
            "field_schema": {
              "type": "list",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The name of the columns to include.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "list",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "ListValueType",
                "python_module_name": "kiara_plugin.core_types.data_types",
                "full_name": "kiara_plugin.core_types.data_types.ListValueType"
              }
            },
            "value_required": false
          },
          "ignore_invalid_column_names": {
            "field_name": "ignore_invalid_column_names",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": true,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "Whether to ignore invalid column names.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "value": {
            "field_name": "value",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The filtered value.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          }
        }
      },
      "table_filter.select_rows": {
        "type_name": "table_filter.select_rows",
        "documentation": {
          "description": "-- n/a --",
          "doc": null
        },
        "authors": {
          "authors": [
            {
              "name": "Markus Binsteiner",
              "email": "markus@frkl.io"
            }
          ]
        },
        "context": {
          "references": {
            "source_repo": {
              "url": "https://github.com/DHARPA-Project/kiara_plugin.tabular",
              "desc": "The module package git repository."
            },
            "documentation": {
              "url": "https://DHARPA-Project.github.io/kiara_plugin.tabular/",
              "desc": "The url for the module package documentation."
            }
          },
          "tags": ["tabular"],
          "labels": {
            "package": "kiara_plugin.tabular"
          }
        },
        "operation": {
          "module_type": "table.filters",
          "module_config": {
            "filter_name": "select_rows"
          },
          "is_resolved": false,
          "operation_id": "table_filter.select_rows",
          "operation_details": {
            "operation_id": "table_filter.select_rows",
            "is_internal_operation": false
          },
          "doc": {
            "description": "-- n/a --",
            "doc": null
          },
          "module_details": {
            "python_class_name": "TableFiltersModule",
            "python_module_name": "kiara_plugin.tabular.modules.table.filters",
            "full_name": "kiara_plugin.tabular.modules.table.filters.TableFiltersModule",
            "module_config": {
              "constants": {},
              "defaults": {},
              "filter_name": "select_rows"
            },
            "inputs_schema": {
              "value": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "A value of type 'table'.",
                  "doc": null
                }
              },
              "match": {
                "type": "string",
                "type_config": {},
                "default": null,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "The string token to match.",
                  "doc": null
                }
              },
              "case_insensitive": {
                "type": "boolean",
                "type_config": {},
                "default": true,
                "optional": true,
                "is_constant": false,
                "doc": {
                  "description": "Whether to ignore case.",
                  "doc": null
                }
              }
            },
            "outputs_schema": {
              "value": {
                "type": "table",
                "type_config": {},
                "default": null,
                "optional": false,
                "is_constant": false,
                "doc": {
                  "description": "The filtered value.",
                  "doc": null
                }
              }
            }
          },
          "metadata": {}
        },
        "operation_types": ["filter"],
        "input_fields": {
          "value": {
            "field_name": "value",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "A value of type 'table'.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          },
          "match": {
            "field_name": "match",
            "field_schema": {
              "type": "string",
              "type_config": {},
              "default": null,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "The string token to match.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "string",
              "data_type_config": {
                "allowed_strings": null
              },
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "StringType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.StringType"
              }
            },
            "value_required": false
          },
          "case_insensitive": {
            "field_name": "case_insensitive",
            "field_schema": {
              "type": "boolean",
              "type_config": {},
              "default": true,
              "optional": true,
              "is_constant": false,
              "doc": {
                "description": "Whether to ignore case.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "boolean",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": true,
                "is_json_serializable": true
              },
              "data_type_class": {
                "python_class_name": "BooleanType",
                "python_module_name": "kiara.data_types.included_core_types",
                "full_name": "kiara.data_types.included_core_types.BooleanType"
              }
            },
            "value_required": false
          }
        },
        "output_fields": {
          "value": {
            "field_name": "value",
            "field_schema": {
              "type": "table",
              "type_config": {},
              "default": null,
              "optional": false,
              "is_constant": false,
              "doc": {
                "description": "The filtered value.",
                "doc": null
              }
            },
            "data_type_info": {
              "data_type_name": "table",
              "data_type_config": {},
              "characteristics": {
                "is_scalar": false,
                "is_json_serializable": false
              },
              "data_type_class": {
                "python_class_name": "TableType",
                "python_module_name": "kiara_plugin.tabular.data_types.table",
                "full_name": "kiara_plugin.tabular.data_types.table.TableType"
              }
            },
            "value_required": true
          }
        }
      }
    }
  }
}
